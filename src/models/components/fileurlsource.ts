/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum FileUrlSourceType {
    Url = "url",
}

export type FileUrlSource = {
    type: FileUrlSourceType;
    data: string;
};

/** @internal */
export namespace FileUrlSourceType$ {
    export const inboundSchema = z.nativeEnum(FileUrlSourceType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FileUrlSource$ {
    export const inboundSchema: z.ZodType<FileUrlSource, z.ZodTypeDef, unknown> = z
        .object({
            type: FileUrlSourceType$.inboundSchema,
            data: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                data: v.data,
            };
        });

    export type Outbound = {
        type: string;
        data: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FileUrlSource> = z
        .object({
            type: FileUrlSourceType$.outboundSchema,
            data: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                data: v.data,
            };
        });
}
