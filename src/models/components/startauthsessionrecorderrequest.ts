/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Auth session recorder start session
 */
export type StartAuthSessionRecorderRequest = {
    /**
     * Auth session id.
     */
    authSessionId: string;
};

/** @internal */
export const StartAuthSessionRecorderRequest$inboundSchema: z.ZodType<
    StartAuthSessionRecorderRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    authSessionId: z.string(),
});

/** @internal */
export type StartAuthSessionRecorderRequest$Outbound = {
    authSessionId: string;
};

/** @internal */
export const StartAuthSessionRecorderRequest$outboundSchema: z.ZodType<
    StartAuthSessionRecorderRequest$Outbound,
    z.ZodTypeDef,
    StartAuthSessionRecorderRequest
> = z.object({
    authSessionId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace StartAuthSessionRecorderRequest$ {
    /** @deprecated use `StartAuthSessionRecorderRequest$inboundSchema` instead. */
    export const inboundSchema = StartAuthSessionRecorderRequest$inboundSchema;
    /** @deprecated use `StartAuthSessionRecorderRequest$outboundSchema` instead. */
    export const outboundSchema = StartAuthSessionRecorderRequest$outboundSchema;
    /** @deprecated use `StartAuthSessionRecorderRequest$Outbound` instead. */
    export type Outbound = StartAuthSessionRecorderRequest$Outbound;
}
