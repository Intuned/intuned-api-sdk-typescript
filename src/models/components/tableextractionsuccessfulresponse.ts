/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * An extracted table.
 */
export type Result = {
    /**
     * The page number where the table was found.
     */
    pageNumber: number;
    /**
     * Title of the table if any.
     */
    title: string | null;
    /**
     * Table content. An array of rows.
     */
    content: Array<Array<string>>;
};

/**
 * Operation status.
 */
export const TableExtractionSuccessfulResponseStatus = {
    Completed: "completed",
} as const;
/**
 * Operation status.
 */
export type TableExtractionSuccessfulResponseStatus = ClosedEnum<
    typeof TableExtractionSuccessfulResponseStatus
>;

/**
 * Successful file extraction result
 */
export type TableExtractionSuccessfulResponse = {
    /**
     * An array of the extracted tables.
     */
    result: Array<Result>;
    /**
     * Operation ID.
     */
    operationId: string;
    /**
     * Operation status.
     */
    status: TableExtractionSuccessfulResponseStatus;
};

/** @internal */
export namespace Result$ {
    export const inboundSchema: z.ZodType<Result, z.ZodTypeDef, unknown> = z.object({
        pageNumber: z.number().int(),
        title: z.nullable(z.string()),
        content: z.array(z.array(z.string())),
    });

    export type Outbound = {
        pageNumber: number;
        title: string | null;
        content: Array<Array<string>>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Result> = z.object({
        pageNumber: z.number().int(),
        title: z.nullable(z.string()),
        content: z.array(z.array(z.string())),
    });
}

/** @internal */
export namespace TableExtractionSuccessfulResponseStatus$ {
    export const inboundSchema: z.ZodNativeEnum<typeof TableExtractionSuccessfulResponseStatus> =
        z.nativeEnum(TableExtractionSuccessfulResponseStatus);
    export const outboundSchema: z.ZodNativeEnum<typeof TableExtractionSuccessfulResponseStatus> =
        inboundSchema;
}

/** @internal */
export namespace TableExtractionSuccessfulResponse$ {
    export const inboundSchema: z.ZodType<
        TableExtractionSuccessfulResponse,
        z.ZodTypeDef,
        unknown
    > = z.object({
        result: z.array(z.lazy(() => Result$.inboundSchema)),
        operationId: z.string(),
        status: TableExtractionSuccessfulResponseStatus$.inboundSchema,
    });

    export type Outbound = {
        result: Array<Result$.Outbound>;
        operationId: string;
        status: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        TableExtractionSuccessfulResponse
    > = z.object({
        result: z.array(z.lazy(() => Result$.outboundSchema)),
        operationId: z.string(),
        status: TableExtractionSuccessfulResponseStatus$.outboundSchema,
    });
}
