/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum ResumeJobMessage {
    Resumed = "Resumed",
}

export type ResumeJob = {
    id?: string | undefined;
    message?: ResumeJobMessage | undefined;
};

/** @internal */
export namespace ResumeJobMessage$ {
    export const inboundSchema = z.nativeEnum(ResumeJobMessage);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace ResumeJob$ {
    export const inboundSchema: z.ZodType<ResumeJob, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string().optional(),
            message: ResumeJobMessage$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        message?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ResumeJob> = z
        .object({
            id: z.string().optional(),
            message: ResumeJobMessage$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });
}
