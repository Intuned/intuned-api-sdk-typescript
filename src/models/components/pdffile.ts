/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FileSource, FileSource$ } from "./filesource";
import * as z from "zod";

/**
 * The file type
 */
export enum PdfFileType {
    Pdf = "pdf",
}

/**
 * PDF file data to extract from
 */
export type PdfFile = {
    /**
     * The file type
     */
    type: PdfFileType;
    /**
     * The pages to extract from. If not provided, all pages will be extracted (this will affect the cost).
     */
    pages?: Array<number> | undefined;
    source: FileSource;
};

/** @internal */
export namespace PdfFileType$ {
    export const inboundSchema = z.nativeEnum(PdfFileType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace PdfFile$ {
    export const inboundSchema: z.ZodType<PdfFile, z.ZodTypeDef, unknown> = z.object({
        type: PdfFileType$.inboundSchema,
        pages: z.array(z.number().int()).optional(),
        source: FileSource$.inboundSchema,
    });

    export type Outbound = {
        type: string;
        pages?: Array<number> | undefined;
        source: FileSource$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PdfFile> = z.object({
        type: PdfFileType$.outboundSchema,
        pages: z.array(z.number().int()).optional(),
        source: FileSource$.outboundSchema,
    });
}
