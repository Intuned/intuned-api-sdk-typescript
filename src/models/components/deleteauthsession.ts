/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const DeleteAuthSessionMessage = {
    Deleted: "Deleted",
} as const;
export type DeleteAuthSessionMessage = ClosedEnum<typeof DeleteAuthSessionMessage>;

export type DeleteAuthSession = {
    message?: DeleteAuthSessionMessage | undefined;
};

/** @internal */
export namespace DeleteAuthSessionMessage$ {
    export const inboundSchema = z.nativeEnum(DeleteAuthSessionMessage);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace DeleteAuthSession$ {
    export const inboundSchema: z.ZodType<DeleteAuthSession, z.ZodTypeDef, unknown> = z.object({
        message: DeleteAuthSessionMessage$.inboundSchema.optional(),
    });

    export type Outbound = {
        message?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteAuthSession> = z.object({
        message: DeleteAuthSessionMessage$.outboundSchema.optional(),
    });
}
