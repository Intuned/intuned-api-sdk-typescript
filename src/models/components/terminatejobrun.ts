/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum TerminateJobRunMessage {
    JobRunTerminated = "Job run terminated",
}

export type TerminateJobRun = {
    message?: TerminateJobRunMessage | undefined;
};

/** @internal */
export namespace TerminateJobRunMessage$ {
    export const inboundSchema = z.nativeEnum(TerminateJobRunMessage);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace TerminateJobRun$ {
    export const inboundSchema: z.ZodType<TerminateJobRun, z.ZodTypeDef, unknown> = z
        .object({
            message: TerminateJobRunMessage$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });

    export type Outbound = {
        message?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TerminateJobRun> = z
        .object({
            message: TerminateJobRunMessage$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });
}
