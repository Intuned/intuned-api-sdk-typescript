/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const TerminateJobRunMessage = {
    JobRunTerminated: "Job run terminated",
} as const;
export type TerminateJobRunMessage = ClosedEnum<typeof TerminateJobRunMessage>;

export type TerminateJobRun = {
    message?: TerminateJobRunMessage | undefined;
};

/** @internal */
export namespace TerminateJobRunMessage$ {
    export const inboundSchema: z.ZodNativeEnum<typeof TerminateJobRunMessage> =
        z.nativeEnum(TerminateJobRunMessage);
    export const outboundSchema: z.ZodNativeEnum<typeof TerminateJobRunMessage> = inboundSchema;
}

/** @internal */
export namespace TerminateJobRun$ {
    export const inboundSchema: z.ZodType<TerminateJobRun, z.ZodTypeDef, unknown> = z.object({
        message: TerminateJobRunMessage$.inboundSchema.optional(),
    });

    export type Outbound = {
        message?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TerminateJobRun> = z.object({
        message: TerminateJobRunMessage$.outboundSchema.optional(),
    });
}
