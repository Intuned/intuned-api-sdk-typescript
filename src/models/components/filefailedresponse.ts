/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Operation status.
 */
export const FileFailedResponseStatus = {
    Failed: "failed",
} as const;
/**
 * Operation status.
 */
export type FileFailedResponseStatus = ClosedEnum<typeof FileFailedResponseStatus>;

/**
 * Failed file extraction result
 */
export type FileFailedResponse = {
    /**
     * Operation ID
     */
    operationId: string;
    /**
     * Operation status.
     */
    status: FileFailedResponseStatus;
    /**
     * Error code.
     */
    error: string;
    /**
     * Error message.
     */
    message: string;
};

/** @internal */
export namespace FileFailedResponseStatus$ {
    export const inboundSchema: z.ZodNativeEnum<typeof FileFailedResponseStatus> =
        z.nativeEnum(FileFailedResponseStatus);
    export const outboundSchema: z.ZodNativeEnum<typeof FileFailedResponseStatus> = inboundSchema;
}

/** @internal */
export namespace FileFailedResponse$ {
    export const inboundSchema: z.ZodType<FileFailedResponse, z.ZodTypeDef, unknown> = z.object({
        operationId: z.string(),
        status: FileFailedResponseStatus$.inboundSchema,
        error: z.string(),
        message: z.string(),
    });

    export type Outbound = {
        operationId: string;
        status: string;
        error: string;
        message: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FileFailedResponse> = z.object({
        operationId: z.string(),
        status: FileFailedResponseStatus$.outboundSchema,
        error: z.string(),
        message: z.string(),
    });
}
