/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { WebhookAPIInfo, WebhookAPIInfo$ } from "./webhookapiinfo";
import * as z from "zod";

/**
 * The project details of the API
 */
export type QueueResultWebhookPayloadProject = {
    /**
     * The project ID
     */
    id: string;
    /**
     * The project name
     */
    name: string;
};

/**
 * The auth session used in the run
 */
export type QueueResultWebhookPayloadAuthSession = {
    /**
     * The ID of the auth session
     */
    id: string;
};

/**
 * The queue details of the run
 */
export type ProjectQueue = {
    /**
     * The queue ID
     */
    id: string;
};

/**
 * Webhook payload of queue item run result
 */
export type QueueResultWebhookPayload = {
    /**
     * Webhook API info
     */
    apiInfo: WebhookAPIInfo;
    /**
     * The workspace ID of the API
     */
    workspaceId: string;
    /**
     * The project details of the API
     */
    project: QueueResultWebhookPayloadProject;
    /**
     * The auth session used in the run
     */
    authSession?: QueueResultWebhookPayloadAuthSession | undefined;
    /**
     * The queue details of the run
     */
    projectQueue: ProjectQueue;
};

/** @internal */
export namespace QueueResultWebhookPayloadProject$ {
    export const inboundSchema: z.ZodType<QueueResultWebhookPayloadProject, z.ZodTypeDef, unknown> =
        z.object({
            id: z.string(),
            name: z.string(),
        });

    export type Outbound = {
        id: string;
        name: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        QueueResultWebhookPayloadProject
    > = z.object({
        id: z.string(),
        name: z.string(),
    });
}

/** @internal */
export namespace QueueResultWebhookPayloadAuthSession$ {
    export const inboundSchema: z.ZodType<
        QueueResultWebhookPayloadAuthSession,
        z.ZodTypeDef,
        unknown
    > = z.object({
        id: z.string(),
    });

    export type Outbound = {
        id: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        QueueResultWebhookPayloadAuthSession
    > = z.object({
        id: z.string(),
    });
}

/** @internal */
export namespace ProjectQueue$ {
    export const inboundSchema: z.ZodType<ProjectQueue, z.ZodTypeDef, unknown> = z.object({
        id: z.string(),
    });

    export type Outbound = {
        id: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ProjectQueue> = z.object({
        id: z.string(),
    });
}

/** @internal */
export namespace QueueResultWebhookPayload$ {
    export const inboundSchema: z.ZodType<QueueResultWebhookPayload, z.ZodTypeDef, unknown> =
        z.object({
            apiInfo: WebhookAPIInfo$.inboundSchema,
            workspaceId: z.string(),
            project: z.lazy(() => QueueResultWebhookPayloadProject$.inboundSchema),
            authSession: z
                .lazy(() => QueueResultWebhookPayloadAuthSession$.inboundSchema)
                .optional(),
            projectQueue: z.lazy(() => ProjectQueue$.inboundSchema),
        });

    export type Outbound = {
        apiInfo: WebhookAPIInfo$.Outbound;
        workspaceId: string;
        project: QueueResultWebhookPayloadProject$.Outbound;
        authSession?: QueueResultWebhookPayloadAuthSession$.Outbound | undefined;
        projectQueue: ProjectQueue$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, QueueResultWebhookPayload> =
        z.object({
            apiInfo: WebhookAPIInfo$.outboundSchema,
            workspaceId: z.string(),
            project: z.lazy(() => QueueResultWebhookPayloadProject$.outboundSchema),
            authSession: z
                .lazy(() => QueueResultWebhookPayloadAuthSession$.outboundSchema)
                .optional(),
            projectQueue: z.lazy(() => ProjectQueue$.outboundSchema),
        });
}
