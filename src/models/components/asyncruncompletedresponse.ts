/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

/**
 * The status of the run
 */
export const AsyncRunCompletedResponseStatus = {
    Completed: "completed",
} as const;
/**
 * The status of the run
 */
export type AsyncRunCompletedResponseStatus = ClosedEnum<typeof AsyncRunCompletedResponseStatus>;

/**
 * Completed API run result
 */
export type AsyncRunCompletedResponse = {
    /**
     * The result of the API run
     */
    result?: { [k: string]: any } | null | undefined;
    /**
     * The status of the run
     */
    status: AsyncRunCompletedResponseStatus;
    /**
     * The run ID
     */
    runId: string;
    /**
     * The HTTP status code of the API run
     */
    statusCode: number;
};

/** @internal */
export namespace AsyncRunCompletedResponseStatus$ {
    export const inboundSchema = z.nativeEnum(AsyncRunCompletedResponseStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace AsyncRunCompletedResponse$ {
    export const inboundSchema: z.ZodType<AsyncRunCompletedResponse, z.ZodTypeDef, unknown> =
        z.object({
            result: z.nullable(z.record(z.any())).optional(),
            status: AsyncRunCompletedResponseStatus$.inboundSchema,
            runId: z.string(),
            statusCode: z.number(),
        });

    export type Outbound = {
        result?: { [k: string]: any } | null | undefined;
        status: string;
        runId: string;
        statusCode: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AsyncRunCompletedResponse> =
        z.object({
            result: z.nullable(z.record(z.any())).optional(),
            status: AsyncRunCompletedResponseStatus$.outboundSchema,
            runId: z.string(),
            statusCode: z.number(),
        });
}
