/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  APIParameters,
  APIParameters$inboundSchema,
  APIParameters$Outbound,
  APIParameters$outboundSchema,
} from "./apiparameters.js";

/**
 * Auth session create request
 */
export type UpdateAuthSessionRequest = {
  /**
   * Auth session id.
   */
  id: string;
  /**
   * The parameters to be passed to the API.
   */
  parameters?: APIParameters | undefined;
  /**
   * Proxy URL following this format `http://username:password@domain:port`
   */
  proxy?: string | undefined;
};

/** @internal */
export const UpdateAuthSessionRequest$inboundSchema: z.ZodType<
  UpdateAuthSessionRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  parameters: APIParameters$inboundSchema.optional(),
  proxy: z.string().optional(),
});

/** @internal */
export type UpdateAuthSessionRequest$Outbound = {
  id: string;
  parameters?: APIParameters$Outbound | undefined;
  proxy?: string | undefined;
};

/** @internal */
export const UpdateAuthSessionRequest$outboundSchema: z.ZodType<
  UpdateAuthSessionRequest$Outbound,
  z.ZodTypeDef,
  UpdateAuthSessionRequest
> = z.object({
  id: z.string(),
  parameters: APIParameters$outboundSchema.optional(),
  proxy: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UpdateAuthSessionRequest$ {
  /** @deprecated use `UpdateAuthSessionRequest$inboundSchema` instead. */
  export const inboundSchema = UpdateAuthSessionRequest$inboundSchema;
  /** @deprecated use `UpdateAuthSessionRequest$outboundSchema` instead. */
  export const outboundSchema = UpdateAuthSessionRequest$outboundSchema;
  /** @deprecated use `UpdateAuthSessionRequest$Outbound` instead. */
  export type Outbound = UpdateAuthSessionRequest$Outbound;
}
