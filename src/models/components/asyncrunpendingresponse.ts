/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

/**
 * The status of the run
 */
export const AsyncRunPendingResponseStatus = {
    Pending: "pending",
} as const;
/**
 * The status of the run
 */
export type AsyncRunPendingResponseStatus = ClosedEnum<typeof AsyncRunPendingResponseStatus>;

/**
 * Pending API run
 */
export type AsyncRunPendingResponse = {
    /**
     * The status of the run
     */
    status: AsyncRunPendingResponseStatus;
    /**
     * The operation ID
     */
    runId: string;
};

/** @internal */
export namespace AsyncRunPendingResponseStatus$ {
    export const inboundSchema = z.nativeEnum(AsyncRunPendingResponseStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace AsyncRunPendingResponse$ {
    export const inboundSchema: z.ZodType<AsyncRunPendingResponse, z.ZodTypeDef, unknown> =
        z.object({
            status: AsyncRunPendingResponseStatus$.inboundSchema,
            runId: z.string(),
        });

    export type Outbound = {
        status: string;
        runId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AsyncRunPendingResponse> =
        z.object({
            status: AsyncRunPendingResponseStatus$.outboundSchema,
            runId: z.string(),
        });
}
