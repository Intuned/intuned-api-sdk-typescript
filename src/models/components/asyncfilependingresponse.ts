/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

/**
 * Operation status.
 */
export const Status = {
    Pending: "pending",
} as const;
/**
 * Operation status.
 */
export type Status = ClosedEnum<typeof Status>;

/**
 * Pending file extraction result
 */
export type AsyncFilePendingResponse = {
    /**
     * Operation ID
     */
    operationId: string;
    /**
     * Operation status.
     */
    status: Status;
};

/** @internal */
export namespace Status$ {
    export const inboundSchema = z.nativeEnum(Status);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace AsyncFilePendingResponse$ {
    export const inboundSchema: z.ZodType<AsyncFilePendingResponse, z.ZodTypeDef, unknown> =
        z.object({
            operationId: z.string(),
            status: Status$.inboundSchema,
        });

    export type Outbound = {
        operationId: string;
        status: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AsyncFilePendingResponse> =
        z.object({
            operationId: z.string(),
            status: Status$.outboundSchema,
        });
}
