/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * An extracted table.
 */
export type Result = {
    /**
     * The page number where the table was found.
     */
    pageNumber: number;
    /**
     * Title of the table if any.
     */
    title: string | null;
    /**
     * Table content. An array of rows.
     */
    content: Array<Array<string>>;
};

/**
 * Table extraction result
 */
export type TableExtractionResponse = {
    /**
     * An array of the extracted tables.
     */
    result: Array<Result>;
};

/** @internal */
export namespace Result$ {
    export const inboundSchema: z.ZodType<Result, z.ZodTypeDef, unknown> = z.object({
        pageNumber: z.number().int(),
        title: z.nullable(z.string()),
        content: z.array(z.array(z.string())),
    });

    export type Outbound = {
        pageNumber: number;
        title: string | null;
        content: Array<Array<string>>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Result> = z.object({
        pageNumber: z.number().int(),
        title: z.nullable(z.string()),
        content: z.array(z.array(z.string())),
    });
}

/** @internal */
export namespace TableExtractionResponse$ {
    export const inboundSchema: z.ZodType<TableExtractionResponse, z.ZodTypeDef, unknown> =
        z.object({
            result: z.array(z.lazy(() => Result$.inboundSchema)),
        });

    export type Outbound = {
        result: Array<Result$.Outbound>;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TableExtractionResponse> =
        z.object({
            result: z.array(z.lazy(() => Result$.outboundSchema)),
        });
}
