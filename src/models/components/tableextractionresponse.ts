/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * extracted table
 */
export type Result = {
    /**
     * page number of the table
     */
    pageNumber?: number | undefined;
    /**
     * title of the table
     */
    title?: string | null | undefined;
    /**
     * table content
     */
    content?: Array<Array<string>> | undefined;
};

export type TableExtractionResponse = {
    /**
     * extracted tables
     */
    result?: Array<Result> | undefined;
};

/** @internal */
export namespace Result$ {
    export const inboundSchema: z.ZodType<Result, z.ZodTypeDef, unknown> = z
        .object({
            pageNumber: z.number().int().optional(),
            title: z.nullable(z.string()).optional(),
            content: z.array(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.pageNumber === undefined ? null : { pageNumber: v.pageNumber }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
            };
        });

    export type Outbound = {
        pageNumber?: number | undefined;
        title?: string | null | undefined;
        content?: Array<Array<string>> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, Result> = z
        .object({
            pageNumber: z.number().int().optional(),
            title: z.nullable(z.string()).optional(),
            content: z.array(z.array(z.string())).optional(),
        })
        .transform((v) => {
            return {
                ...(v.pageNumber === undefined ? null : { pageNumber: v.pageNumber }),
                ...(v.title === undefined ? null : { title: v.title }),
                ...(v.content === undefined ? null : { content: v.content }),
            };
        });
}

/** @internal */
export namespace TableExtractionResponse$ {
    export const inboundSchema: z.ZodType<TableExtractionResponse, z.ZodTypeDef, unknown> = z
        .object({
            result: z.array(z.lazy(() => Result$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.result === undefined ? null : { result: v.result }),
            };
        });

    export type Outbound = {
        result?: Array<Result$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TableExtractionResponse> = z
        .object({
            result: z.array(z.lazy(() => Result$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.result === undefined ? null : { result: v.result }),
            };
        });
}
