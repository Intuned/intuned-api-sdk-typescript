/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const CreateAuthSessionResumeStatus = {
    Resumed: "resumed",
} as const;
export type CreateAuthSessionResumeStatus = ClosedEnum<typeof CreateAuthSessionResumeStatus>;

export type CreateAuthSessionResume = {
    status: CreateAuthSessionResumeStatus;
};

/** @internal */
export namespace CreateAuthSessionResumeStatus$ {
    export const inboundSchema: z.ZodNativeEnum<typeof CreateAuthSessionResumeStatus> =
        z.nativeEnum(CreateAuthSessionResumeStatus);
    export const outboundSchema: z.ZodNativeEnum<typeof CreateAuthSessionResumeStatus> =
        inboundSchema;
}

/** @internal */
export namespace CreateAuthSessionResume$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionResume, z.ZodTypeDef, unknown> =
        z.object({
            status: CreateAuthSessionResumeStatus$.inboundSchema,
        });

    export type Outbound = {
        status: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionResume> =
        z.object({
            status: CreateAuthSessionResumeStatus$.outboundSchema,
        });
}
