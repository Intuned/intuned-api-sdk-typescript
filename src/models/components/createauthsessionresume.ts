/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const CreateAuthSessionResumeResult = {
    Resumed: "resumed",
} as const;
export type CreateAuthSessionResumeResult = ClosedEnum<typeof CreateAuthSessionResumeResult>;

export type CreateAuthSessionResume = {
    result?: CreateAuthSessionResumeResult | undefined;
};

/** @internal */
export namespace CreateAuthSessionResumeResult$ {
    export const inboundSchema = z.nativeEnum(CreateAuthSessionResumeResult);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateAuthSessionResume$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionResume, z.ZodTypeDef, unknown> =
        z.object({
            result: CreateAuthSessionResumeResult$.inboundSchema.optional(),
        });

    export type Outbound = {
        result?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionResume> =
        z.object({
            result: CreateAuthSessionResumeResult$.outboundSchema.optional(),
        });
}
