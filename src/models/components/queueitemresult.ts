/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { CompletedQueueItemResult, CompletedQueueItemResult$ } from "./completedqueueitemresult";
import { FailedQueueItemResult, FailedQueueItemResult$ } from "./failedqueueitemresult";
import { PendingQueueItemResult, PendingQueueItemResult$ } from "./pendingqueueitemresult";
import * as z from "zod";

/**
 * The result of an item execution. Can be pending, completed or failed.
 */
export type QueueItemResult =
    | PendingQueueItemResult
    | CompletedQueueItemResult
    | FailedQueueItemResult;

/** @internal */
export namespace QueueItemResult$ {
    export const inboundSchema: z.ZodType<QueueItemResult, z.ZodTypeDef, unknown> = z.union([
        PendingQueueItemResult$.inboundSchema,
        CompletedQueueItemResult$.inboundSchema,
        FailedQueueItemResult$.inboundSchema,
    ]);

    export type Outbound =
        | PendingQueueItemResult$.Outbound
        | CompletedQueueItemResult$.Outbound
        | FailedQueueItemResult$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, QueueItemResult> = z.union([
        PendingQueueItemResult$.outboundSchema,
        CompletedQueueItemResult$.outboundSchema,
        FailedQueueItemResult$.outboundSchema,
    ]);
}
