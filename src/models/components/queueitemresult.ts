/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  CompletedQueueItemResult,
  CompletedQueueItemResult$inboundSchema,
  CompletedQueueItemResult$Outbound,
  CompletedQueueItemResult$outboundSchema,
} from "./completedqueueitemresult.js";
import {
  FailedQueueItemResult,
  FailedQueueItemResult$inboundSchema,
  FailedQueueItemResult$Outbound,
  FailedQueueItemResult$outboundSchema,
} from "./failedqueueitemresult.js";
import {
  PendingQueueItemResult,
  PendingQueueItemResult$inboundSchema,
  PendingQueueItemResult$Outbound,
  PendingQueueItemResult$outboundSchema,
} from "./pendingqueueitemresult.js";
import {
  QueuedQueueItemResult,
  QueuedQueueItemResult$inboundSchema,
  QueuedQueueItemResult$Outbound,
  QueuedQueueItemResult$outboundSchema,
} from "./queuedqueueitemresult.js";

/**
 * The result of an item execution. Can be queued, pending, completed or failed. Queued means the item has not been processed yet. Pending means the item is currently being processed, and thus cannot be deleted.
 */
export type QueueItemResult =
  | QueuedQueueItemResult
  | PendingQueueItemResult
  | CompletedQueueItemResult
  | FailedQueueItemResult;

/** @internal */
export const QueueItemResult$inboundSchema: z.ZodType<
  QueueItemResult,
  z.ZodTypeDef,
  unknown
> = z.union([
  QueuedQueueItemResult$inboundSchema,
  PendingQueueItemResult$inboundSchema,
  CompletedQueueItemResult$inboundSchema,
  FailedQueueItemResult$inboundSchema,
]);

/** @internal */
export type QueueItemResult$Outbound =
  | QueuedQueueItemResult$Outbound
  | PendingQueueItemResult$Outbound
  | CompletedQueueItemResult$Outbound
  | FailedQueueItemResult$Outbound;

/** @internal */
export const QueueItemResult$outboundSchema: z.ZodType<
  QueueItemResult$Outbound,
  z.ZodTypeDef,
  QueueItemResult
> = z.union([
  QueuedQueueItemResult$outboundSchema,
  PendingQueueItemResult$outboundSchema,
  CompletedQueueItemResult$outboundSchema,
  FailedQueueItemResult$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueueItemResult$ {
  /** @deprecated use `QueueItemResult$inboundSchema` instead. */
  export const inboundSchema = QueueItemResult$inboundSchema;
  /** @deprecated use `QueueItemResult$outboundSchema` instead. */
  export const outboundSchema = QueueItemResult$outboundSchema;
  /** @deprecated use `QueueItemResult$Outbound` instead. */
  export type Outbound = QueueItemResult$Outbound;
}
