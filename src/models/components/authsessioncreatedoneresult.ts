/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

/**
 * Status of auth session creation operation
 */
export const AuthSessionCreateDoneResultStatus = {
    Done: "done",
} as const;
/**
 * Status of auth session creation operation
 */
export type AuthSessionCreateDoneResultStatus = ClosedEnum<
    typeof AuthSessionCreateDoneResultStatus
>;

/**
 * Auth session create done
 */
export type AuthSessionCreateDoneResult = {
    /**
     * Status of auth session creation operation
     */
    status: AuthSessionCreateDoneResultStatus;
    /**
     * Auth session ID
     */
    authSessionId: string;
};

/** @internal */
export namespace AuthSessionCreateDoneResultStatus$ {
    export const inboundSchema = z.nativeEnum(AuthSessionCreateDoneResultStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace AuthSessionCreateDoneResult$ {
    export const inboundSchema: z.ZodType<AuthSessionCreateDoneResult, z.ZodTypeDef, unknown> =
        z.object({
            status: AuthSessionCreateDoneResultStatus$.inboundSchema,
            authSessionId: z.string(),
        });

    export type Outbound = {
        status: string;
        authSessionId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AuthSessionCreateDoneResult> =
        z.object({
            status: AuthSessionCreateDoneResultStatus$.outboundSchema,
            authSessionId: z.string(),
        });
}
