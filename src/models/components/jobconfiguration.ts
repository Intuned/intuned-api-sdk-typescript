/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import { JobRetry, JobRetry$ } from "./jobretry.js";
import * as z from "zod";

/**
 * The run mode of the job. Currently, only `Order-Irrelevant` is supported.
 */
export const JobConfigurationRunMode = {
    OrderIrrelevant: "Order-Irrelevant",
} as const;
/**
 * The run mode of the job. Currently, only `Order-Irrelevant` is supported.
 */
export type JobConfigurationRunMode = ClosedEnum<typeof JobConfigurationRunMode>;

/**
 * The configuration of the job. Configures the retry policy and maximum concurrent requests.
 */
export type JobConfiguration = {
    /**
     * The run mode of the job. Currently, only `Order-Irrelevant` is supported.
     */
    runMode: JobConfigurationRunMode;
    /**
     * The batch size of payloads to execute. This does not guarantee that the payloads will be executed at the same time.
     */
    maxConcurrentRequests?: number | undefined;
    /**
     * The retry policy of the job. Configure how many retries and the delay between them for each payload. The delay is calculated as `max(initialInterval * (backoffCoefficient ^ [i]), maximumInterval)`, where `i` is the current retry iteration.
     */
    retry?: JobRetry | undefined;
};

/** @internal */
export namespace JobConfigurationRunMode$ {
    export const inboundSchema: z.ZodNativeEnum<typeof JobConfigurationRunMode> =
        z.nativeEnum(JobConfigurationRunMode);
    export const outboundSchema: z.ZodNativeEnum<typeof JobConfigurationRunMode> = inboundSchema;
}

/** @internal */
export namespace JobConfiguration$ {
    export const inboundSchema: z.ZodType<JobConfiguration, z.ZodTypeDef, unknown> = z.object({
        runMode: JobConfigurationRunMode$.inboundSchema,
        maxConcurrentRequests: z.number().optional(),
        retry: JobRetry$.inboundSchema.optional(),
    });

    export type Outbound = {
        runMode: string;
        maxConcurrentRequests?: number | undefined;
        retry?: JobRetry$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JobConfiguration> = z.object({
        runMode: JobConfigurationRunMode$.outboundSchema,
        maxConcurrentRequests: z.number().optional(),
        retry: JobRetry$.outboundSchema.optional(),
    });
}
