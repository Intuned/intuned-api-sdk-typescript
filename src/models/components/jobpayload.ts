/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  APIParameters,
  APIParameters$inboundSchema,
  APIParameters$Outbound,
  APIParameters$outboundSchema,
} from "./apiparameters.js";

/**
 * A payload to be executed by the job
 */
export type JobPayload = {
  /**
   * The name of the API to be executed. This is the file path relative to the `api` folder inside your project.
   */
  apiName: string;
  /**
   * The parameters to be passed to the API.
   */
  parameters?: APIParameters | undefined;
};

/** @internal */
export const JobPayload$inboundSchema: z.ZodType<
  JobPayload,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiName: z.string(),
  parameters: APIParameters$inboundSchema.optional(),
});

/** @internal */
export type JobPayload$Outbound = {
  apiName: string;
  parameters?: APIParameters$Outbound | undefined;
};

/** @internal */
export const JobPayload$outboundSchema: z.ZodType<
  JobPayload$Outbound,
  z.ZodTypeDef,
  JobPayload
> = z.object({
  apiName: z.string(),
  parameters: APIParameters$outboundSchema.optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JobPayload$ {
  /** @deprecated use `JobPayload$inboundSchema` instead. */
  export const inboundSchema = JobPayload$inboundSchema;
  /** @deprecated use `JobPayload$outboundSchema` instead. */
  export const outboundSchema = JobPayload$outboundSchema;
  /** @deprecated use `JobPayload$Outbound` instead. */
  export type Outbound = JobPayload$Outbound;
}
