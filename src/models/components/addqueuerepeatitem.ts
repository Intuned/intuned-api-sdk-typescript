/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum AddQueueRepeatItemStatus {
    RepeatableItemCreated = "repeatable item created",
}

export type AddQueueRepeatItem = {
    id?: string | undefined;
    status?: AddQueueRepeatItemStatus | undefined;
};

/** @internal */
export namespace AddQueueRepeatItemStatus$ {
    export const inboundSchema = z.nativeEnum(AddQueueRepeatItemStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace AddQueueRepeatItem$ {
    export const inboundSchema: z.ZodType<AddQueueRepeatItem, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string().optional(),
            status: AddQueueRepeatItemStatus$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        status?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddQueueRepeatItem> = z
        .object({
            id: z.string().optional(),
            status: AddQueueRepeatItemStatus$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.status === undefined ? null : { status: v.status }),
            };
        });
}
