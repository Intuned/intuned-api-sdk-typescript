/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
    WebhookAPIInfo,
    WebhookAPIInfo$inboundSchema,
    WebhookAPIInfo$Outbound,
    WebhookAPIInfo$outboundSchema,
} from "./webhookapiinfo.js";
import * as z from "zod";

/**
 * The project details of the API
 */
export type QueueSinkResultPayloadProject = {
    /**
     * The project ID
     */
    id: string;
    /**
     * The project name
     */
    name: string;
};

/**
 * The auth session used in the run
 */
export type QueueSinkResultPayloadAuthSession = {
    /**
     * The ID of the auth session
     */
    id: string;
};

/**
 * The queue details of the run
 */
export type ProjectQueue = {
    /**
     * The queue ID
     */
    id: string;
};

/**
 * Webhook payload of queue item run result
 */
export type QueueSinkResultPayload = {
    /**
     * Webhook API info
     */
    apiInfo: WebhookAPIInfo;
    /**
     * The workspace ID of the API
     */
    workspaceId: string;
    /**
     * The project details of the API
     */
    project: QueueSinkResultPayloadProject;
    /**
     * The auth session used in the run
     */
    authSession?: QueueSinkResultPayloadAuthSession | undefined;
    /**
     * The queue details of the run
     */
    projectQueue: ProjectQueue;
};

/** @internal */
export const QueueSinkResultPayloadProject$inboundSchema: z.ZodType<
    QueueSinkResultPayloadProject,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
    name: z.string(),
});

/** @internal */
export type QueueSinkResultPayloadProject$Outbound = {
    id: string;
    name: string;
};

/** @internal */
export const QueueSinkResultPayloadProject$outboundSchema: z.ZodType<
    QueueSinkResultPayloadProject$Outbound,
    z.ZodTypeDef,
    QueueSinkResultPayloadProject
> = z.object({
    id: z.string(),
    name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueueSinkResultPayloadProject$ {
    /** @deprecated use `QueueSinkResultPayloadProject$inboundSchema` instead. */
    export const inboundSchema = QueueSinkResultPayloadProject$inboundSchema;
    /** @deprecated use `QueueSinkResultPayloadProject$outboundSchema` instead. */
    export const outboundSchema = QueueSinkResultPayloadProject$outboundSchema;
    /** @deprecated use `QueueSinkResultPayloadProject$Outbound` instead. */
    export type Outbound = QueueSinkResultPayloadProject$Outbound;
}

/** @internal */
export const QueueSinkResultPayloadAuthSession$inboundSchema: z.ZodType<
    QueueSinkResultPayloadAuthSession,
    z.ZodTypeDef,
    unknown
> = z.object({
    id: z.string(),
});

/** @internal */
export type QueueSinkResultPayloadAuthSession$Outbound = {
    id: string;
};

/** @internal */
export const QueueSinkResultPayloadAuthSession$outboundSchema: z.ZodType<
    QueueSinkResultPayloadAuthSession$Outbound,
    z.ZodTypeDef,
    QueueSinkResultPayloadAuthSession
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueueSinkResultPayloadAuthSession$ {
    /** @deprecated use `QueueSinkResultPayloadAuthSession$inboundSchema` instead. */
    export const inboundSchema = QueueSinkResultPayloadAuthSession$inboundSchema;
    /** @deprecated use `QueueSinkResultPayloadAuthSession$outboundSchema` instead. */
    export const outboundSchema = QueueSinkResultPayloadAuthSession$outboundSchema;
    /** @deprecated use `QueueSinkResultPayloadAuthSession$Outbound` instead. */
    export type Outbound = QueueSinkResultPayloadAuthSession$Outbound;
}

/** @internal */
export const ProjectQueue$inboundSchema: z.ZodType<ProjectQueue, z.ZodTypeDef, unknown> = z.object({
    id: z.string(),
});

/** @internal */
export type ProjectQueue$Outbound = {
    id: string;
};

/** @internal */
export const ProjectQueue$outboundSchema: z.ZodType<
    ProjectQueue$Outbound,
    z.ZodTypeDef,
    ProjectQueue
> = z.object({
    id: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ProjectQueue$ {
    /** @deprecated use `ProjectQueue$inboundSchema` instead. */
    export const inboundSchema = ProjectQueue$inboundSchema;
    /** @deprecated use `ProjectQueue$outboundSchema` instead. */
    export const outboundSchema = ProjectQueue$outboundSchema;
    /** @deprecated use `ProjectQueue$Outbound` instead. */
    export type Outbound = ProjectQueue$Outbound;
}

/** @internal */
export const QueueSinkResultPayload$inboundSchema: z.ZodType<
    QueueSinkResultPayload,
    z.ZodTypeDef,
    unknown
> = z.object({
    apiInfo: WebhookAPIInfo$inboundSchema,
    workspaceId: z.string(),
    project: z.lazy(() => QueueSinkResultPayloadProject$inboundSchema),
    authSession: z.lazy(() => QueueSinkResultPayloadAuthSession$inboundSchema).optional(),
    projectQueue: z.lazy(() => ProjectQueue$inboundSchema),
});

/** @internal */
export type QueueSinkResultPayload$Outbound = {
    apiInfo: WebhookAPIInfo$Outbound;
    workspaceId: string;
    project: QueueSinkResultPayloadProject$Outbound;
    authSession?: QueueSinkResultPayloadAuthSession$Outbound | undefined;
    projectQueue: ProjectQueue$Outbound;
};

/** @internal */
export const QueueSinkResultPayload$outboundSchema: z.ZodType<
    QueueSinkResultPayload$Outbound,
    z.ZodTypeDef,
    QueueSinkResultPayload
> = z.object({
    apiInfo: WebhookAPIInfo$outboundSchema,
    workspaceId: z.string(),
    project: z.lazy(() => QueueSinkResultPayloadProject$outboundSchema),
    authSession: z.lazy(() => QueueSinkResultPayloadAuthSession$outboundSchema).optional(),
    projectQueue: z.lazy(() => ProjectQueue$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueueSinkResultPayload$ {
    /** @deprecated use `QueueSinkResultPayload$inboundSchema` instead. */
    export const inboundSchema = QueueSinkResultPayload$inboundSchema;
    /** @deprecated use `QueueSinkResultPayload$outboundSchema` instead. */
    export const outboundSchema = QueueSinkResultPayload$outboundSchema;
    /** @deprecated use `QueueSinkResultPayload$Outbound` instead. */
    export type Outbound = QueueSinkResultPayload$Outbound;
}
