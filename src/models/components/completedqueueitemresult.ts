/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Execution status of the item
 */
export enum CompletedQueueItemResultStatus {
    Completed = "completed",
}

export type CompletedQueueItemResult = {
    /**
     * The run ID of the item
     */
    runId: string;
    /**
     * Execution status of the item
     */
    status: CompletedQueueItemResultStatus;
    /**
     * The result of an API call.
     */
    result?: any | undefined;
    /**
     * The API response status code
     */
    statusCode: number;
};

/** @internal */
export namespace CompletedQueueItemResultStatus$ {
    export const inboundSchema = z.nativeEnum(CompletedQueueItemResultStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CompletedQueueItemResult$ {
    export const inboundSchema: z.ZodType<CompletedQueueItemResult, z.ZodTypeDef, unknown> =
        z.object({
            runId: z.string(),
            status: CompletedQueueItemResultStatus$.inboundSchema,
            result: z.any().optional(),
            statusCode: z.number(),
        });

    export type Outbound = {
        runId: string;
        status: string;
        result?: any | undefined;
        statusCode: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CompletedQueueItemResult> =
        z.object({
            runId: z.string(),
            status: CompletedQueueItemResultStatus$.outboundSchema,
            result: z.any().optional(),
            statusCode: z.number(),
        });
}
