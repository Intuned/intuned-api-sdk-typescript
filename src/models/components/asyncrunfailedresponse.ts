/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The status of the run
 */
export const AsyncRunFailedResponseStatus = {
    Failed: "failed",
} as const;
/**
 * The status of the run
 */
export type AsyncRunFailedResponseStatus = ClosedEnum<typeof AsyncRunFailedResponseStatus>;

/**
 * Failed API run result
 */
export type AsyncRunFailedResponse = {
    /**
     * Error code
     */
    error: string;
    /**
     * Error message
     */
    message: string;
    /**
     * The status of the run
     */
    status: AsyncRunFailedResponseStatus;
    /**
     * The HTTP status code of the API run
     */
    statusCode: number;
    /**
     * The run ID
     */
    runId: string;
};

/** @internal */
export namespace AsyncRunFailedResponseStatus$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AsyncRunFailedResponseStatus> = z.nativeEnum(
        AsyncRunFailedResponseStatus
    );
    export const outboundSchema: z.ZodNativeEnum<typeof AsyncRunFailedResponseStatus> =
        inboundSchema;
}

/** @internal */
export namespace AsyncRunFailedResponse$ {
    export const inboundSchema: z.ZodType<AsyncRunFailedResponse, z.ZodTypeDef, unknown> = z.object(
        {
            error: z.string(),
            message: z.string(),
            status: AsyncRunFailedResponseStatus$.inboundSchema,
            statusCode: z.number(),
            runId: z.string(),
        }
    );

    export type Outbound = {
        error: string;
        message: string;
        status: string;
        statusCode: number;
        runId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AsyncRunFailedResponse> =
        z.object({
            error: z.string(),
            message: z.string(),
            status: AsyncRunFailedResponseStatus$.outboundSchema,
            statusCode: z.number(),
            runId: z.string(),
        });
}
