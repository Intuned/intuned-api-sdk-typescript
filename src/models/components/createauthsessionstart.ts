/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const CreateAuthSessionStartStatus = {
    Started: "started",
} as const;
export type CreateAuthSessionStartStatus = ClosedEnum<typeof CreateAuthSessionStartStatus>;

export type CreateAuthSessionStart = {
    status: CreateAuthSessionStartStatus;
    /**
     * Operation ID for the auth session creation. This is used in the resume and result operations.
     */
    operationId: string;
};

/** @internal */
export namespace CreateAuthSessionStartStatus$ {
    export const inboundSchema = z.nativeEnum(CreateAuthSessionStartStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace CreateAuthSessionStart$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionStart, z.ZodTypeDef, unknown> = z.object(
        {
            status: CreateAuthSessionStartStatus$.inboundSchema,
            operationId: z.string(),
        }
    );

    export type Outbound = {
        status: string;
        operationId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionStart> =
        z.object({
            status: CreateAuthSessionStartStatus$.outboundSchema,
            operationId: z.string(),
        });
}
