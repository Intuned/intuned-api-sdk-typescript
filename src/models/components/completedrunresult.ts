/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CompletedRunResult = {
    /**
     * The result of the API run
     */
    result: { [k: string]: any };
};

/** @internal */
export namespace CompletedRunResult$ {
    export const inboundSchema: z.ZodType<CompletedRunResult, z.ZodTypeDef, unknown> = z
        .object({
            result: z.record(z.any()),
        })
        .transform((v) => {
            return {
                result: v.result,
            };
        });

    export type Outbound = {
        result: { [k: string]: any };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CompletedRunResult> = z
        .object({
            result: z.record(z.any()),
        })
        .transform((v) => {
            return {
                result: v.result,
            };
        });
}
