/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const Message = {
    Created: "created",
} as const;
export type Message = ClosedEnum<typeof Message>;

export type CreateJob = {
    id?: string | undefined;
    message?: Message | undefined;
};

/** @internal */
export namespace Message$ {
    export const inboundSchema: z.ZodNativeEnum<typeof Message> = z.nativeEnum(Message);
    export const outboundSchema: z.ZodNativeEnum<typeof Message> = inboundSchema;
}

/** @internal */
export namespace CreateJob$ {
    export const inboundSchema: z.ZodType<CreateJob, z.ZodTypeDef, unknown> = z.object({
        id: z.string().optional(),
        message: Message$.inboundSchema.optional(),
    });

    export type Outbound = {
        id?: string | undefined;
        message?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateJob> = z.object({
        id: z.string().optional(),
        message: Message$.outboundSchema.optional(),
    });
}
