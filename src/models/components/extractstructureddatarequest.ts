/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { FileT, FileT$ } from "./file.js";
import * as z from "zod";

/**
 * The request to extract structured data from file
 */
export type ExtractStructuredDataRequest = {
    file: FileT;
    /**
     * The schema (in JSONSchema) to which the extracted data should conform to. [More about JSONSchema](https://json-schema.org/learn/getting-started-step-by-step)
     */
    dataSchema: { [k: string]: any };
};

/** @internal */
export namespace ExtractStructuredDataRequest$ {
    export const inboundSchema: z.ZodType<ExtractStructuredDataRequest, z.ZodTypeDef, unknown> =
        z.object({
            file: FileT$.inboundSchema,
            dataSchema: z.record(z.any()),
        });

    export type Outbound = {
        file: FileT$.Outbound;
        dataSchema: { [k: string]: any };
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractStructuredDataRequest> =
        z.object({
            file: FileT$.outboundSchema,
            dataSchema: z.record(z.any()),
        });
}
