/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * The status of the run
 */
export const WebhookAPIInfoResultCompletedStatus = {
    Completed: "completed",
} as const;
/**
 * The status of the run
 */
export type WebhookAPIInfoResultCompletedStatus = ClosedEnum<
    typeof WebhookAPIInfoResultCompletedStatus
>;

/**
 * API result of completed run
 */
export type WebhookAPIInfoResultCompleted = {
    /**
     * The result of an API call.
     */
    result?: any | undefined;
    /**
     * The status of the run
     */
    status: WebhookAPIInfoResultCompletedStatus;
    /**
     * The HTTP status code of the API run
     */
    statusCode: number;
};

/** @internal */
export const WebhookAPIInfoResultCompletedStatus$inboundSchema: z.ZodNativeEnum<
    typeof WebhookAPIInfoResultCompletedStatus
> = z.nativeEnum(WebhookAPIInfoResultCompletedStatus);

/** @internal */
export const WebhookAPIInfoResultCompletedStatus$outboundSchema: z.ZodNativeEnum<
    typeof WebhookAPIInfoResultCompletedStatus
> = WebhookAPIInfoResultCompletedStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookAPIInfoResultCompletedStatus$ {
    /** @deprecated use `WebhookAPIInfoResultCompletedStatus$inboundSchema` instead. */
    export const inboundSchema = WebhookAPIInfoResultCompletedStatus$inboundSchema;
    /** @deprecated use `WebhookAPIInfoResultCompletedStatus$outboundSchema` instead. */
    export const outboundSchema = WebhookAPIInfoResultCompletedStatus$outboundSchema;
}

/** @internal */
export const WebhookAPIInfoResultCompleted$inboundSchema: z.ZodType<
    WebhookAPIInfoResultCompleted,
    z.ZodTypeDef,
    unknown
> = z.object({
    result: z.any().optional(),
    status: WebhookAPIInfoResultCompletedStatus$inboundSchema,
    statusCode: z.number(),
});

/** @internal */
export type WebhookAPIInfoResultCompleted$Outbound = {
    result?: any | undefined;
    status: string;
    statusCode: number;
};

/** @internal */
export const WebhookAPIInfoResultCompleted$outboundSchema: z.ZodType<
    WebhookAPIInfoResultCompleted$Outbound,
    z.ZodTypeDef,
    WebhookAPIInfoResultCompleted
> = z.object({
    result: z.any().optional(),
    status: WebhookAPIInfoResultCompletedStatus$outboundSchema,
    statusCode: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WebhookAPIInfoResultCompleted$ {
    /** @deprecated use `WebhookAPIInfoResultCompleted$inboundSchema` instead. */
    export const inboundSchema = WebhookAPIInfoResultCompleted$inboundSchema;
    /** @deprecated use `WebhookAPIInfoResultCompleted$outboundSchema` instead. */
    export const outboundSchema = WebhookAPIInfoResultCompleted$outboundSchema;
    /** @deprecated use `WebhookAPIInfoResultCompleted$Outbound` instead. */
    export type Outbound = WebhookAPIInfoResultCompleted$Outbound;
}
