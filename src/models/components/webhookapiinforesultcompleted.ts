/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

/**
 * The status of the run
 */
export const WebhookAPIInfoResultCompletedStatus = {
    Completed: "completed",
} as const;
/**
 * The status of the run
 */
export type WebhookAPIInfoResultCompletedStatus = ClosedEnum<
    typeof WebhookAPIInfoResultCompletedStatus
>;

/**
 * API result of completed run
 */
export type WebhookAPIInfoResultCompleted = {
    /**
     * The result of an API call.
     */
    result?: any | undefined;
    /**
     * The status of the run
     */
    status: WebhookAPIInfoResultCompletedStatus;
    /**
     * The HTTP status code of the API run
     */
    statusCode: number;
};

/** @internal */
export namespace WebhookAPIInfoResultCompletedStatus$ {
    export const inboundSchema = z.nativeEnum(WebhookAPIInfoResultCompletedStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace WebhookAPIInfoResultCompleted$ {
    export const inboundSchema: z.ZodType<WebhookAPIInfoResultCompleted, z.ZodTypeDef, unknown> =
        z.object({
            result: z.any().optional(),
            status: WebhookAPIInfoResultCompletedStatus$.inboundSchema,
            statusCode: z.number(),
        });

    export type Outbound = {
        result?: any | undefined;
        status: string;
        statusCode: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookAPIInfoResultCompleted> =
        z.object({
            result: z.any().optional(),
            status: WebhookAPIInfoResultCompletedStatus$.outboundSchema,
            statusCode: z.number(),
        });
}
