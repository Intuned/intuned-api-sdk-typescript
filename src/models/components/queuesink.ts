/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum QueueSinkType {
    Webhook = "webhook",
}

export type QueueSink = {
    type: QueueSinkType;
    url: string;
};

/** @internal */
export namespace QueueSinkType$ {
    export const inboundSchema = z.nativeEnum(QueueSinkType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace QueueSink$ {
    export const inboundSchema: z.ZodType<QueueSink, z.ZodTypeDef, unknown> = z
        .object({
            type: QueueSinkType$.inboundSchema,
            url: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                url: v.url,
            };
        });

    export type Outbound = {
        type: string;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, QueueSink> = z
        .object({
            type: QueueSinkType$.outboundSchema,
            url: z.string(),
        })
        .transform((v) => {
            return {
                type: v.type,
                url: v.url,
            };
        });
}
