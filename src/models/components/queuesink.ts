/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

export const QueueSinkType = {
    Webhook: "webhook",
} as const;
export type QueueSinkType = ClosedEnum<typeof QueueSinkType>;

/**
 * Webhook sink configuration
 */
export type QueueSink = {
    type: QueueSinkType;
    /**
     * The webhook URL.
     */
    url: string;
};

/** @internal */
export namespace QueueSinkType$ {
    export const inboundSchema = z.nativeEnum(QueueSinkType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace QueueSink$ {
    export const inboundSchema: z.ZodType<QueueSink, z.ZodTypeDef, unknown> = z.object({
        type: QueueSinkType$.inboundSchema,
        url: z.string(),
    });

    export type Outbound = {
        type: string;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, QueueSink> = z.object({
        type: QueueSinkType$.outboundSchema,
        url: z.string(),
    });
}
