/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type MarkdownExtractionResponse = {
    /**
     * extracted markdown
     */
    result?: string | undefined;
};

/** @internal */
export namespace MarkdownExtractionResponse$ {
    export const inboundSchema: z.ZodType<MarkdownExtractionResponse, z.ZodTypeDef, unknown> = z
        .object({
            result: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.result === undefined ? null : { result: v.result }),
            };
        });

    export type Outbound = {
        result?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, MarkdownExtractionResponse> = z
        .object({
            result: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.result === undefined ? null : { result: v.result }),
            };
        });
}
