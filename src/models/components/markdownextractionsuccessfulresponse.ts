/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Operation status.
 */
export const MarkdownExtractionSuccessfulResponseStatus = {
    Completed: "completed",
} as const;
/**
 * Operation status.
 */
export type MarkdownExtractionSuccessfulResponseStatus = ClosedEnum<
    typeof MarkdownExtractionSuccessfulResponseStatus
>;

/**
 * Successful file extraction result
 */
export type MarkdownExtractionSuccessfulResponse = {
    /**
     * The extracted markdown
     */
    result: string;
    /**
     * Operation ID.
     */
    operationId: string;
    /**
     * Operation status.
     */
    status: MarkdownExtractionSuccessfulResponseStatus;
};

/** @internal */
export namespace MarkdownExtractionSuccessfulResponseStatus$ {
    export const inboundSchema: z.ZodNativeEnum<typeof MarkdownExtractionSuccessfulResponseStatus> =
        z.nativeEnum(MarkdownExtractionSuccessfulResponseStatus);
    export const outboundSchema: z.ZodNativeEnum<
        typeof MarkdownExtractionSuccessfulResponseStatus
    > = inboundSchema;
}

/** @internal */
export namespace MarkdownExtractionSuccessfulResponse$ {
    export const inboundSchema: z.ZodType<
        MarkdownExtractionSuccessfulResponse,
        z.ZodTypeDef,
        unknown
    > = z.object({
        result: z.string(),
        operationId: z.string(),
        status: MarkdownExtractionSuccessfulResponseStatus$.inboundSchema,
    });

    export type Outbound = {
        result: string;
        operationId: string;
        status: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        MarkdownExtractionSuccessfulResponse
    > = z.object({
        result: z.string(),
        operationId: z.string(),
        status: MarkdownExtractionSuccessfulResponseStatus$.outboundSchema,
    });
}
