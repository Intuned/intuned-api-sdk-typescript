/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    AsyncFileCompletedResponse,
    AsyncFileCompletedResponse$,
} from "./asyncfilecompletedresponse";
import { AsyncFileFailedResponse, AsyncFileFailedResponse$ } from "./asyncfilefailedresponse";
import { AsyncRunPendingResponse, AsyncRunPendingResponse$ } from "./asyncrunpendingresponse";
import * as z from "zod";

export type AsyncResultResponse =
    | AsyncRunPendingResponse
    | AsyncFileCompletedResponse
    | AsyncFileFailedResponse;

/** @internal */
export namespace AsyncResultResponse$ {
    export const inboundSchema: z.ZodType<AsyncResultResponse, z.ZodTypeDef, unknown> = z.union([
        AsyncRunPendingResponse$.inboundSchema,
        AsyncFileCompletedResponse$.inboundSchema,
        AsyncFileFailedResponse$.inboundSchema,
    ]);

    export type Outbound =
        | AsyncRunPendingResponse$.Outbound
        | AsyncFileCompletedResponse$.Outbound
        | AsyncFileFailedResponse$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AsyncResultResponse> = z.union([
        AsyncRunPendingResponse$.outboundSchema,
        AsyncFileCompletedResponse$.outboundSchema,
        AsyncFileFailedResponse$.outboundSchema,
    ]);
}
