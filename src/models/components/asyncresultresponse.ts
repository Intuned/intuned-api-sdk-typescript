/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AsyncCompletedResponse, AsyncCompletedResponse$ } from "./asynccompletedresponse";
import { AsyncFailedResponse, AsyncFailedResponse$ } from "./asyncfailedresponse";
import { AsyncPendingResponse, AsyncPendingResponse$ } from "./asyncpendingresponse";
import * as z from "zod";

export type AsyncResultResponse =
    | AsyncPendingResponse
    | AsyncCompletedResponse
    | AsyncFailedResponse;

/** @internal */
export namespace AsyncResultResponse$ {
    export const inboundSchema: z.ZodType<AsyncResultResponse, z.ZodTypeDef, unknown> = z.union([
        AsyncPendingResponse$.inboundSchema,
        AsyncCompletedResponse$.inboundSchema,
        AsyncFailedResponse$.inboundSchema,
    ]);

    export type Outbound =
        | AsyncPendingResponse$.Outbound
        | AsyncCompletedResponse$.Outbound
        | AsyncFailedResponse$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AsyncResultResponse> = z.union([
        AsyncPendingResponse$.outboundSchema,
        AsyncCompletedResponse$.outboundSchema,
        AsyncFailedResponse$.outboundSchema,
    ]);
}
