/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Execution status of the item
 */
export enum FailedQueueItemResultStatus {
    Failed = "failed",
}

export type FailedQueueItemResult = {
    /**
     * The run ID of the item
     */
    runId: string;
    /**
     * Execution status of the item
     */
    status: FailedQueueItemResultStatus;
    /**
     * The error that occurred during API execution.
     */
    error: { [k: string]: any };
    /**
     * The API response status code.
     */
    statusCode: number;
};

/** @internal */
export namespace FailedQueueItemResultStatus$ {
    export const inboundSchema = z.nativeEnum(FailedQueueItemResultStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace FailedQueueItemResult$ {
    export const inboundSchema: z.ZodType<FailedQueueItemResult, z.ZodTypeDef, unknown> = z.object({
        runId: z.string(),
        status: FailedQueueItemResultStatus$.inboundSchema,
        error: z.record(z.any()),
        statusCode: z.number(),
    });

    export type Outbound = {
        runId: string;
        status: string;
        error: { [k: string]: any };
        statusCode: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FailedQueueItemResult> =
        z.object({
            runId: z.string(),
            status: FailedQueueItemResultStatus$.outboundSchema,
            error: z.record(z.any()),
            statusCode: z.number(),
        });
}
