/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

/**
 * Execution status of the item
 */
export const FailedQueueItemResultStatus = {
    Failed: "failed",
} as const;
/**
 * Execution status of the item
 */
export type FailedQueueItemResultStatus = ClosedEnum<typeof FailedQueueItemResultStatus>;

export type FailedQueueItemResult = {
    /**
     * The run ID of the item
     */
    runId: string;
    /**
     * Execution status of the item
     */
    status: FailedQueueItemResultStatus;
    /**
     * The error that occurred during API execution.
     */
    error: { [k: string]: any };
    /**
     * The API response status code.
     */
    statusCode: number;
};

/** @internal */
export const FailedQueueItemResultStatus$inboundSchema: z.ZodNativeEnum<
    typeof FailedQueueItemResultStatus
> = z.nativeEnum(FailedQueueItemResultStatus);

/** @internal */
export const FailedQueueItemResultStatus$outboundSchema: z.ZodNativeEnum<
    typeof FailedQueueItemResultStatus
> = FailedQueueItemResultStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FailedQueueItemResultStatus$ {
    /** @deprecated use `FailedQueueItemResultStatus$inboundSchema` instead. */
    export const inboundSchema = FailedQueueItemResultStatus$inboundSchema;
    /** @deprecated use `FailedQueueItemResultStatus$outboundSchema` instead. */
    export const outboundSchema = FailedQueueItemResultStatus$outboundSchema;
}

/** @internal */
export const FailedQueueItemResult$inboundSchema: z.ZodType<
    FailedQueueItemResult,
    z.ZodTypeDef,
    unknown
> = z.object({
    runId: z.string(),
    status: FailedQueueItemResultStatus$inboundSchema,
    error: z.record(z.any()),
    statusCode: z.number(),
});

/** @internal */
export type FailedQueueItemResult$Outbound = {
    runId: string;
    status: string;
    error: { [k: string]: any };
    statusCode: number;
};

/** @internal */
export const FailedQueueItemResult$outboundSchema: z.ZodType<
    FailedQueueItemResult$Outbound,
    z.ZodTypeDef,
    FailedQueueItemResult
> = z.object({
    runId: z.string(),
    status: FailedQueueItemResultStatus$outboundSchema,
    error: z.record(z.any()),
    statusCode: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FailedQueueItemResult$ {
    /** @deprecated use `FailedQueueItemResult$inboundSchema` instead. */
    export const inboundSchema = FailedQueueItemResult$inboundSchema;
    /** @deprecated use `FailedQueueItemResult$outboundSchema` instead. */
    export const outboundSchema = FailedQueueItemResult$outboundSchema;
    /** @deprecated use `FailedQueueItemResult$Outbound` instead. */
    export type Outbound = FailedQueueItemResult$Outbound;
}
