/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type StructuredDataExtractionResponse = {
    /**
     * result json object with extracted data.
     */
    result?: { [k: string]: any } | undefined;
};

/** @internal */
export namespace StructuredDataExtractionResponse$ {
    export const inboundSchema: z.ZodType<StructuredDataExtractionResponse, z.ZodTypeDef, unknown> =
        z
            .object({
                result: z.record(z.any()).optional(),
            })
            .transform((v) => {
                return {
                    ...(v.result === undefined ? null : { result: v.result }),
                };
            });

    export type Outbound = {
        result?: { [k: string]: any } | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        StructuredDataExtractionResponse
    > = z
        .object({
            result: z.record(z.any()).optional(),
        })
        .transform((v) => {
            return {
                ...(v.result === undefined ? null : { result: v.result }),
            };
        });
}
