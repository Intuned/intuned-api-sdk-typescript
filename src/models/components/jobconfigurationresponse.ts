/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types/enums.js";
import { JobRetryResponse, JobRetryResponse$ } from "./jobretryresponse.js";
import * as z from "zod";

/**
 * The run mode of the job. Currently, only `Order-Irrelevant` is supported.
 */
export const RunMode = {
    OrderIrrelevant: "Order-Irrelevant",
} as const;
/**
 * The run mode of the job. Currently, only `Order-Irrelevant` is supported.
 */
export type RunMode = ClosedEnum<typeof RunMode>;

/**
 * The configuration of the job. Configures the retry policy and maximum concurrent requests.
 */
export type JobConfigurationResponse = {
    /**
     * The run mode of the job. Currently, only `Order-Irrelevant` is supported.
     */
    runMode: RunMode;
    /**
     * The batch size of payloads to execute. This does not guarantee that the payloads will be executed at the same time.
     */
    maxConcurrentRequests?: number | undefined;
    /**
     * The retry policy of the job. Configure how many retries and the delay between them for each payload. The delay is calculated as `max(initialInterval * (backoffCoefficient ^ [i]), maximumInterval)`, where `i` is the current retry iteration.
     */
    retry?: JobRetryResponse | undefined;
};

/** @internal */
export namespace RunMode$ {
    export const inboundSchema: z.ZodNativeEnum<typeof RunMode> = z.nativeEnum(RunMode);
    export const outboundSchema: z.ZodNativeEnum<typeof RunMode> = inboundSchema;
}

/** @internal */
export namespace JobConfigurationResponse$ {
    export const inboundSchema: z.ZodType<JobConfigurationResponse, z.ZodTypeDef, unknown> =
        z.object({
            runMode: RunMode$.inboundSchema,
            maxConcurrentRequests: z.number().optional(),
            retry: JobRetryResponse$.inboundSchema.optional(),
        });

    export type Outbound = {
        runMode: string;
        maxConcurrentRequests?: number | undefined;
        retry?: JobRetryResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, JobConfigurationResponse> =
        z.object({
            runMode: RunMode$.outboundSchema,
            maxConcurrentRequests: z.number().optional(),
            retry: JobRetryResponse$.outboundSchema.optional(),
        });
}
