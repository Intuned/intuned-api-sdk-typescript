/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  APIParameters,
  APIParameters$inboundSchema,
  APIParameters$Outbound,
  APIParameters$outboundSchema,
} from "./apiparameters.js";
import {
  Retry,
  Retry$inboundSchema,
  Retry$Outbound,
  Retry$outboundSchema,
} from "./retry.js";

/**
 * Details of a repeatable item.
 */
export type QueueRepeatItem = {
  /**
   * The name of the API to be executed. This is the file path relative to the `api` folder inside your project.
   */
  apiName: string;
  /**
   * The parameters to be passed to the API.
   */
  parameters?: APIParameters | undefined;
  /**
   * Retry policy configurations
   */
  retry?: Retry | undefined;
  /**
   * Repeat period, minimum of 10 minutes. On every period, this item will be appended to the queue.
   */
  repeat: string;
  /**
   * The ID of the repeatable item.
   */
  id: string;
  /**
   * The run ID of the last time this repeatable item executed.
   */
  lastRunId?: string | undefined;
};

/** @internal */
export const QueueRepeatItem$inboundSchema: z.ZodType<
  QueueRepeatItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiName: z.string(),
  parameters: APIParameters$inboundSchema.optional(),
  retry: Retry$inboundSchema.optional(),
  repeat: z.string(),
  id: z.string(),
  lastRunId: z.string().optional(),
});

/** @internal */
export type QueueRepeatItem$Outbound = {
  apiName: string;
  parameters?: APIParameters$Outbound | undefined;
  retry?: Retry$Outbound | undefined;
  repeat: string;
  id: string;
  lastRunId?: string | undefined;
};

/** @internal */
export const QueueRepeatItem$outboundSchema: z.ZodType<
  QueueRepeatItem$Outbound,
  z.ZodTypeDef,
  QueueRepeatItem
> = z.object({
  apiName: z.string(),
  parameters: APIParameters$outboundSchema.optional(),
  retry: Retry$outboundSchema.optional(),
  repeat: z.string(),
  id: z.string(),
  lastRunId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueueRepeatItem$ {
  /** @deprecated use `QueueRepeatItem$inboundSchema` instead. */
  export const inboundSchema = QueueRepeatItem$inboundSchema;
  /** @deprecated use `QueueRepeatItem$outboundSchema` instead. */
  export const outboundSchema = QueueRepeatItem$outboundSchema;
  /** @deprecated use `QueueRepeatItem$Outbound` instead. */
  export type Outbound = QueueRepeatItem$Outbound;
}
