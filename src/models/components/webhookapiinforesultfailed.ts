/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { ClosedEnum } from "../../types";
import * as z from "zod";

/**
 * The status of the run
 */
export const WebhookAPIInfoResultFailedStatus = {
    Failed: "failed",
} as const;
/**
 * The status of the run
 */
export type WebhookAPIInfoResultFailedStatus = ClosedEnum<typeof WebhookAPIInfoResultFailedStatus>;

/**
 * API result of failed run
 */
export type WebhookAPIInfoResultFailed = {
    /**
     * Error code
     */
    error: string;
    /**
     * Error message
     */
    message: string;
    /**
     * The status of the run
     */
    status: WebhookAPIInfoResultFailedStatus;
    /**
     * The HTTP status code of the API run
     */
    statusCode: number;
};

/** @internal */
export namespace WebhookAPIInfoResultFailedStatus$ {
    export const inboundSchema = z.nativeEnum(WebhookAPIInfoResultFailedStatus);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace WebhookAPIInfoResultFailed$ {
    export const inboundSchema: z.ZodType<WebhookAPIInfoResultFailed, z.ZodTypeDef, unknown> =
        z.object({
            error: z.string(),
            message: z.string(),
            status: WebhookAPIInfoResultFailedStatus$.inboundSchema,
            statusCode: z.number(),
        });

    export type Outbound = {
        error: string;
        message: string;
        status: string;
        statusCode: number;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookAPIInfoResultFailed> =
        z.object({
            error: z.string(),
            message: z.string(),
            status: WebhookAPIInfoResultFailedStatus$.outboundSchema,
            statusCode: z.number(),
        });
}
