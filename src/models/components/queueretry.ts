/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type QueueRetry = {
    maximumAttempts?: number | undefined;
};

/** @internal */
export namespace QueueRetry$ {
    export const inboundSchema: z.ZodType<QueueRetry, z.ZodTypeDef, unknown> = z
        .object({
            maximumAttempts: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.maximumAttempts === undefined
                    ? null
                    : { maximumAttempts: v.maximumAttempts }),
            };
        });

    export type Outbound = {
        maximumAttempts?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, QueueRetry> = z
        .object({
            maximumAttempts: z.number().optional(),
        })
        .transform((v) => {
            return {
                ...(v.maximumAttempts === undefined
                    ? null
                    : { maximumAttempts: v.maximumAttempts }),
            };
        });
}
