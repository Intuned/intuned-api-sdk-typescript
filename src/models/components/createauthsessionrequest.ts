/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    APIParameters,
    APIParameters$inboundSchema,
    APIParameters$Outbound,
    APIParameters$outboundSchema,
} from "./apiparameters.js";
import * as z from "zod";

/**
 * Auth session create request
 */
export type CreateAuthSessionRequest = {
    /**
     * Auth session display name
     */
    authSessionDisplayName?: string | undefined;
    /**
     * The parameters to be passed to the API.
     */
    parameters?: APIParameters | undefined;
    /**
     * Proxy URL following this format `http://username@password:domain:port`
     */
    proxy?: string | undefined;
};

/** @internal */
export const CreateAuthSessionRequest$inboundSchema: z.ZodType<
    CreateAuthSessionRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    authSessionDisplayName: z.string().optional(),
    parameters: APIParameters$inboundSchema.optional(),
    proxy: z.string().optional(),
});

/** @internal */
export type CreateAuthSessionRequest$Outbound = {
    authSessionDisplayName?: string | undefined;
    parameters?: APIParameters$Outbound | undefined;
    proxy?: string | undefined;
};

/** @internal */
export const CreateAuthSessionRequest$outboundSchema: z.ZodType<
    CreateAuthSessionRequest$Outbound,
    z.ZodTypeDef,
    CreateAuthSessionRequest
> = z.object({
    authSessionDisplayName: z.string().optional(),
    parameters: APIParameters$outboundSchema.optional(),
    proxy: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateAuthSessionRequest$ {
    /** @deprecated use `CreateAuthSessionRequest$inboundSchema` instead. */
    export const inboundSchema = CreateAuthSessionRequest$inboundSchema;
    /** @deprecated use `CreateAuthSessionRequest$outboundSchema` instead. */
    export const outboundSchema = CreateAuthSessionRequest$outboundSchema;
    /** @deprecated use `CreateAuthSessionRequest$Outbound` instead. */
    export type Outbound = CreateAuthSessionRequest$Outbound;
}
