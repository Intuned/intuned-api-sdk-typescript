/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { JobSinkResultPayload, JobSinkResultPayload$ } from "./jobsinkresultpayload.js";
import { QueueSinkResultPayload, QueueSinkResultPayload$ } from "./queuesinkresultpayload.js";
import * as z from "zod";

export type SinkResult = QueueSinkResultPayload | JobSinkResultPayload;

/** @internal */
export namespace SinkResult$ {
    export const inboundSchema: z.ZodType<SinkResult, z.ZodTypeDef, unknown> = z.union([
        QueueSinkResultPayload$.inboundSchema,
        JobSinkResultPayload$.inboundSchema,
    ]);

    export type Outbound = QueueSinkResultPayload$.Outbound | JobSinkResultPayload$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SinkResult> = z.union([
        QueueSinkResultPayload$.outboundSchema,
        JobSinkResultPayload$.outboundSchema,
    ]);
}
