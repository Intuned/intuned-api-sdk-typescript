/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    APIParameters,
    APIParameters$inboundSchema,
    APIParameters$Outbound,
    APIParameters$outboundSchema,
} from "./apiparameters.js";
import {
    AuthSession,
    AuthSession$inboundSchema,
    AuthSession$Outbound,
    AuthSession$outboundSchema,
} from "./authsession.js";
import { Retry, Retry$inboundSchema, Retry$Outbound, Retry$outboundSchema } from "./retry.js";
import * as z from "zod";

/**
 * An item that will be repeatably appended to the queue.
 */
export type QueueRepeatItemInput = {
    /**
     * The name of the API to be executed. This is the file path relative to the `api` folder inside your project.
     */
    apiName: string;
    /**
     * The parameters to be passed to the API.
     */
    parameters?: APIParameters | undefined;
    /**
     * Retry policy configurations
     */
    retry?: Retry | undefined;
    /**
     * Auth session configurations
     */
    authSession?: AuthSession | undefined;
    /**
     * Repeat period, minimum of 10 minutes. On every period, this item will be appended to the queue.
     */
    repeat: string;
};

/** @internal */
export const QueueRepeatItemInput$inboundSchema: z.ZodType<
    QueueRepeatItemInput,
    z.ZodTypeDef,
    unknown
> = z.object({
    apiName: z.string(),
    parameters: APIParameters$inboundSchema.optional(),
    retry: Retry$inboundSchema.optional(),
    authSession: AuthSession$inboundSchema.optional(),
    repeat: z.string(),
});

/** @internal */
export type QueueRepeatItemInput$Outbound = {
    apiName: string;
    parameters?: APIParameters$Outbound | undefined;
    retry?: Retry$Outbound | undefined;
    authSession?: AuthSession$Outbound | undefined;
    repeat: string;
};

/** @internal */
export const QueueRepeatItemInput$outboundSchema: z.ZodType<
    QueueRepeatItemInput$Outbound,
    z.ZodTypeDef,
    QueueRepeatItemInput
> = z.object({
    apiName: z.string(),
    parameters: APIParameters$outboundSchema.optional(),
    retry: Retry$outboundSchema.optional(),
    authSession: AuthSession$outboundSchema.optional(),
    repeat: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace QueueRepeatItemInput$ {
    /** @deprecated use `QueueRepeatItemInput$inboundSchema` instead. */
    export const inboundSchema = QueueRepeatItemInput$inboundSchema;
    /** @deprecated use `QueueRepeatItemInput$outboundSchema` instead. */
    export const outboundSchema = QueueRepeatItemInput$outboundSchema;
    /** @deprecated use `QueueRepeatItemInput$Outbound` instead. */
    export type Outbound = QueueRepeatItemInput$Outbound;
}
