/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    AsyncRunCompletedResponse,
    AsyncRunCompletedResponse$,
} from "./asyncruncompletedresponse.js";
import { AsyncRunFailedResponse, AsyncRunFailedResponse$ } from "./asyncrunfailedresponse.js";
import * as z from "zod";

export type SyncResultResponse = AsyncRunCompletedResponse | AsyncRunFailedResponse;

/** @internal */
export namespace SyncResultResponse$ {
    export const inboundSchema: z.ZodType<SyncResultResponse, z.ZodTypeDef, unknown> = z.union([
        AsyncRunCompletedResponse$.inboundSchema,
        AsyncRunFailedResponse$.inboundSchema,
    ]);

    export type Outbound = AsyncRunCompletedResponse$.Outbound | AsyncRunFailedResponse$.Outbound;
    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, SyncResultResponse> = z.union([
        AsyncRunCompletedResponse$.outboundSchema,
        AsyncRunFailedResponse$.outboundSchema,
    ]);
}
