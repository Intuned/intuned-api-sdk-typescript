/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export enum WebhookSinkType {
    Webhook = "webhook",
}

/**
 * Webhook sink configuration
 */
export type WebhookSink = {
    type: WebhookSinkType;
    /**
     * The webhook URL.
     */
    url: string;
};

/** @internal */
export namespace WebhookSinkType$ {
    export const inboundSchema = z.nativeEnum(WebhookSinkType);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace WebhookSink$ {
    export const inboundSchema: z.ZodType<WebhookSink, z.ZodTypeDef, unknown> = z.object({
        type: WebhookSinkType$.inboundSchema,
        url: z.string(),
    });

    export type Outbound = {
        type: string;
        url: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, WebhookSink> = z.object({
        type: WebhookSinkType$.outboundSchema,
        url: z.string(),
    });
}
