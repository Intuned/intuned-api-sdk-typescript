/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * AI model to use for extraction
 */
export const TextAiExtractionModel = {
  Claude3Haiku: "claude-3-haiku",
  Claude3Haiku20240307: "claude-3-haiku-20240307",
  Claude3Opus: "claude-3-opus",
  Claude3Opus20240229: "claude-3-opus-20240229",
  Claude3Sonnet: "claude-3-sonnet",
  Claude3Sonnet20240229: "claude-3-sonnet-20240229",
  Claude35Sonnet: "claude-3.5-sonnet",
  Claude35Sonnet20240620: "claude-3-5-sonnet-20240620",
  Gpt4Turbo: "gpt4-turbo",
  Gpt4Turbo20240409: "gpt-4-turbo-2024-04-09",
  Gpt4o: "gpt-4o",
  Gpt4o20240513: "gpt-4o-2024-05-13",
  Gpt35Turbo: "gpt3.5-turbo",
  Gpt35Turbo0125: "gpt-3.5-turbo-0125",
} as const;
/**
 * AI model to use for extraction
 */
export type TextAiExtractionModel = ClosedEnum<typeof TextAiExtractionModel>;

/** @internal */
export const TextAiExtractionModel$inboundSchema: z.ZodNativeEnum<
  typeof TextAiExtractionModel
> = z.nativeEnum(TextAiExtractionModel);

/** @internal */
export const TextAiExtractionModel$outboundSchema: z.ZodNativeEnum<
  typeof TextAiExtractionModel
> = TextAiExtractionModel$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace TextAiExtractionModel$ {
  /** @deprecated use `TextAiExtractionModel$inboundSchema` instead. */
  export const inboundSchema = TextAiExtractionModel$inboundSchema;
  /** @deprecated use `TextAiExtractionModel$outboundSchema` instead. */
  export const outboundSchema = TextAiExtractionModel$outboundSchema;
}
