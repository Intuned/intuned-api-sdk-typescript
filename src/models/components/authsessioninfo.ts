/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Auth session information
 */
export type AuthSessionInfo = {
    /**
     * Auth session ID
     */
    id: string;
    /**
     * Auth session name
     */
    name?: string | null | undefined;
};

/** @internal */
export const AuthSessionInfo$inboundSchema: z.ZodType<AuthSessionInfo, z.ZodTypeDef, unknown> =
    z.object({
        id: z.string(),
        name: z.nullable(z.string()).optional(),
    });

/** @internal */
export type AuthSessionInfo$Outbound = {
    id: string;
    name?: string | null | undefined;
};

/** @internal */
export const AuthSessionInfo$outboundSchema: z.ZodType<
    AuthSessionInfo$Outbound,
    z.ZodTypeDef,
    AuthSessionInfo
> = z.object({
    id: z.string(),
    name: z.nullable(z.string()).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AuthSessionInfo$ {
    /** @deprecated use `AuthSessionInfo$inboundSchema` instead. */
    export const inboundSchema = AuthSessionInfo$inboundSchema;
    /** @deprecated use `AuthSessionInfo$outboundSchema` instead. */
    export const outboundSchema = AuthSessionInfo$outboundSchema;
    /** @deprecated use `AuthSessionInfo$Outbound` instead. */
    export type Outbound = AuthSessionInfo$Outbound;
}
