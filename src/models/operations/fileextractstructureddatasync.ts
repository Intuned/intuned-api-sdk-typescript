/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type FileExtractStructuredDataSyncGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type FileExtractStructuredDataSyncResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * The extracted data
     */
    structuredDataExtractionResponse?: components.StructuredDataExtractionResponse | undefined;
};

/** @internal */
export namespace FileExtractStructuredDataSyncGlobals$ {
    export const inboundSchema: z.ZodType<
        FileExtractStructuredDataSyncGlobals,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FileExtractStructuredDataSyncGlobals
    > = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace FileExtractStructuredDataSyncResponse$ {
    export const inboundSchema: z.ZodType<
        FileExtractStructuredDataSyncResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            StructuredDataExtractionResponse:
                components.StructuredDataExtractionResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.StructuredDataExtractionResponse === undefined
                    ? null
                    : { structuredDataExtractionResponse: v.StructuredDataExtractionResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        StructuredDataExtractionResponse?:
            | components.StructuredDataExtractionResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FileExtractStructuredDataSyncResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            structuredDataExtractionResponse:
                components.StructuredDataExtractionResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.structuredDataExtractionResponse === undefined
                    ? null
                    : { StructuredDataExtractionResponse: v.structuredDataExtractionResponse }),
            };
        });
}
