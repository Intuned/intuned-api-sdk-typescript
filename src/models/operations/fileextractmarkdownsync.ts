/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type FileExtractMarkdownSyncGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type FileExtractMarkdownSyncResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * The extracted markdown
     */
    markdownExtractionResponse?: components.MarkdownExtractionResponse | undefined;
};

/** @internal */
export namespace FileExtractMarkdownSyncGlobals$ {
    export const inboundSchema: z.ZodType<FileExtractMarkdownSyncGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, FileExtractMarkdownSyncGlobals> =
        z
            .object({
                workspaceId: z.string(),
            })
            .transform((v) => {
                return {
                    workspaceId: v.workspaceId,
                };
            });
}

/** @internal */
export namespace FileExtractMarkdownSyncResponse$ {
    export const inboundSchema: z.ZodType<FileExtractMarkdownSyncResponse, z.ZodTypeDef, unknown> =
        z
            .object({
                HttpMeta: components.HTTPMetadata$.inboundSchema,
                MarkdownExtractionResponse:
                    components.MarkdownExtractionResponse$.inboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    httpMeta: v.HttpMeta,
                    ...(v.MarkdownExtractionResponse === undefined
                        ? null
                        : { markdownExtractionResponse: v.MarkdownExtractionResponse }),
                };
            });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        MarkdownExtractionResponse?: components.MarkdownExtractionResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FileExtractMarkdownSyncResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            markdownExtractionResponse:
                components.MarkdownExtractionResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.markdownExtractionResponse === undefined
                    ? null
                    : { MarkdownExtractionResponse: v.markdownExtractionResponse }),
            };
        });
}
