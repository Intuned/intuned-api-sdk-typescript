/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type GetJobRunsGlobals = {
    /**
     * Your workspace ID. [How to find it](https://docs.intunedhq.com/docs/management/workspace#finding-your-workspace-id)?
     */
    workspaceId: string;
};

export type GetJobRunsRequest = {
    /**
     * Your project name. It is the name you provide when creating a project.
     */
    projectName: string;
    /**
     * Your job ID. It is the ID of the job you provide when creating it.
     */
    jobId: string;
};

export type GetJobRunsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Array of job runs
     */
    getJobRuns?: Array<components.JobRun> | undefined;
};

/** @internal */
export namespace GetJobRunsGlobals$ {
    export const inboundSchema: z.ZodType<GetJobRunsGlobals, z.ZodTypeDef, unknown> = z.object({
        workspaceId: z.string(),
    });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetJobRunsGlobals> = z.object({
        workspaceId: z.string(),
    });
}

/** @internal */
export namespace GetJobRunsRequest$ {
    export const inboundSchema: z.ZodType<GetJobRunsRequest, z.ZodTypeDef, unknown> = z.object({
        projectName: z.string(),
        jobId: z.string(),
    });

    export type Outbound = {
        projectName: string;
        jobId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetJobRunsRequest> = z.object({
        projectName: z.string(),
        jobId: z.string(),
    });
}

/** @internal */
export namespace GetJobRunsResponse$ {
    export const inboundSchema: z.ZodType<GetJobRunsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GetJobRuns: z.array(components.JobRun$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                GetJobRuns: "getJobRuns",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GetJobRuns?: Array<components.JobRun$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetJobRunsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            getJobRuns: z.array(components.JobRun$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                getJobRuns: "GetJobRuns",
            });
        });
}
