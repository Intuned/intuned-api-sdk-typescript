/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type DeleteAuthSessionGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
    /**
     * Project name
     */
    projectName: string;
};

export type DeleteAuthSessionRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
    /**
     * Authentication session ID
     */
    authSessionId: string;
};

export type DeleteAuthSessionResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully deleted
     */
    deleteAuthSession?: components.DeleteAuthSession | undefined;
};

/** @internal */
export namespace DeleteAuthSessionGlobals$ {
    export const inboundSchema: z.ZodType<DeleteAuthSessionGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });

    export type Outbound = {
        workspaceId: string;
        projectName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteAuthSessionGlobals> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });
}

/** @internal */
export namespace DeleteAuthSessionRequest$ {
    export const inboundSchema: z.ZodType<DeleteAuthSessionRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
            authSessionId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                authSessionId: v.authSessionId,
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
        authSessionId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteAuthSessionRequest> = z
        .object({
            projectName: z.string().optional(),
            authSessionId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                authSessionId: v.authSessionId,
            };
        });
}

/** @internal */
export namespace DeleteAuthSessionResponse$ {
    export const inboundSchema: z.ZodType<DeleteAuthSessionResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            DeleteAuthSession: components.DeleteAuthSession$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.DeleteAuthSession === undefined
                    ? null
                    : { deleteAuthSession: v.DeleteAuthSession }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        DeleteAuthSession?: components.DeleteAuthSession$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteAuthSessionResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            deleteAuthSession: components.DeleteAuthSession$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.deleteAuthSession === undefined
                    ? null
                    : { DeleteAuthSession: v.deleteAuthSession }),
            };
        });
}
