/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ExtractStructuredDataGlobals = {
    /**
     * Workspace Id.
     */
    workspaceId?: string | undefined;
};

export type ExtractStructuredDataResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * The extracted data
     */
    structuredDataExtractionResponse?: components.StructuredDataExtractionResponse | undefined;
};

/** @internal */
export namespace ExtractStructuredDataGlobals$ {
    export const inboundSchema: z.ZodType<ExtractStructuredDataGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
            };
        });

    export type Outbound = {
        workspaceId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractStructuredDataGlobals> = z
        .object({
            workspaceId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
            };
        });
}

/** @internal */
export namespace ExtractStructuredDataResponse$ {
    export const inboundSchema: z.ZodType<ExtractStructuredDataResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            StructuredDataExtractionResponse:
                components.StructuredDataExtractionResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.StructuredDataExtractionResponse === undefined
                    ? null
                    : { structuredDataExtractionResponse: v.StructuredDataExtractionResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        StructuredDataExtractionResponse?:
            | components.StructuredDataExtractionResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractStructuredDataResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                structuredDataExtractionResponse:
                    components.StructuredDataExtractionResponse$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.structuredDataExtractionResponse === undefined
                        ? null
                        : { StructuredDataExtractionResponse: v.structuredDataExtractionResponse }),
                };
            });
}
