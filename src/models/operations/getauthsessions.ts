/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetAuthSessionsGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
    /**
     * Project name
     */
    projectName: string;
};

export type GetAuthSessionsRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
};

export type GetAuthSessionsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * List of auth sessions
     */
    getAuthSessions?: Array<components.AuthSessionInfo> | undefined;
};

/** @internal */
export namespace GetAuthSessionsGlobals$ {
    export const inboundSchema: z.ZodType<GetAuthSessionsGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });

    export type Outbound = {
        workspaceId: string;
        projectName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAuthSessionsGlobals> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });
}

/** @internal */
export namespace GetAuthSessionsRequest$ {
    export const inboundSchema: z.ZodType<GetAuthSessionsRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAuthSessionsRequest> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });
}

/** @internal */
export namespace GetAuthSessionsResponse$ {
    export const inboundSchema: z.ZodType<GetAuthSessionsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GetAuthSessions: z.array(components.AuthSessionInfo$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.GetAuthSessions === undefined
                    ? null
                    : { getAuthSessions: v.GetAuthSessions }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GetAuthSessions?: Array<components.AuthSessionInfo$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAuthSessionsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            getAuthSessions: z.array(components.AuthSessionInfo$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.getAuthSessions === undefined
                    ? null
                    : { GetAuthSessions: v.getAuthSessions }),
            };
        });
}
