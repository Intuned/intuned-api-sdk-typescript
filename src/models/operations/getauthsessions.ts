/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type GetAuthSessionsGlobals = {
    /**
     * Your workspace ID. [How to find it](https://docs.intunedhq.com/docs/management/workspace#finding-your-workspace-id)?
     */
    workspaceId: string;
};

export type GetAuthSessionsRequest = {
    /**
     * Your project name. It is the name you provide when creating a project.
     */
    projectName: string;
};

export type GetAuthSessionsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * List of auth sessions
     */
    getAuthSessions?: Array<components.AuthSessionInfo> | undefined;
};

/** @internal */
export namespace GetAuthSessionsGlobals$ {
    export const inboundSchema: z.ZodType<GetAuthSessionsGlobals, z.ZodTypeDef, unknown> = z.object(
        {
            workspaceId: z.string(),
        }
    );

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAuthSessionsGlobals> =
        z.object({
            workspaceId: z.string(),
        });
}

/** @internal */
export namespace GetAuthSessionsRequest$ {
    export const inboundSchema: z.ZodType<GetAuthSessionsRequest, z.ZodTypeDef, unknown> = z.object(
        {
            projectName: z.string(),
        }
    );

    export type Outbound = {
        projectName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAuthSessionsRequest> =
        z.object({
            projectName: z.string(),
        });
}

/** @internal */
export namespace GetAuthSessionsResponse$ {
    export const inboundSchema: z.ZodType<GetAuthSessionsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GetAuthSessions: z.array(components.AuthSessionInfo$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                GetAuthSessions: "getAuthSessions",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GetAuthSessions?: Array<components.AuthSessionInfo$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAuthSessionsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            getAuthSessions: z.array(components.AuthSessionInfo$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                getAuthSessions: "GetAuthSessions",
            });
        });
}
