/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ExtractTablesResultGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type ExtractTablesResultRequest = {
    /**
     * Operation Id.
     */
    operationId: string;
};

export type ExtractTablesResultResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Result of the operation. Can be pending, completed or failed.
     */
    tableExtractionAsyncResponse?: components.TableExtractionAsyncResponse | undefined;
};

/** @internal */
export namespace ExtractTablesResultGlobals$ {
    export const inboundSchema: z.ZodType<ExtractTablesResultGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractTablesResultGlobals> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace ExtractTablesResultRequest$ {
    export const inboundSchema: z.ZodType<ExtractTablesResultRequest, z.ZodTypeDef, unknown> = z
        .object({
            operationId: z.string(),
        })
        .transform((v) => {
            return {
                operationId: v.operationId,
            };
        });

    export type Outbound = {
        operationId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractTablesResultRequest> = z
        .object({
            operationId: z.string(),
        })
        .transform((v) => {
            return {
                operationId: v.operationId,
            };
        });
}

/** @internal */
export namespace ExtractTablesResultResponse$ {
    export const inboundSchema: z.ZodType<ExtractTablesResultResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            TableExtractionAsyncResponse:
                components.TableExtractionAsyncResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.TableExtractionAsyncResponse === undefined
                    ? null
                    : { tableExtractionAsyncResponse: v.TableExtractionAsyncResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        TableExtractionAsyncResponse?:
            | components.TableExtractionAsyncResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractTablesResultResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            tableExtractionAsyncResponse:
                components.TableExtractionAsyncResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.tableExtractionAsyncResponse === undefined
                    ? null
                    : { TableExtractionAsyncResponse: v.tableExtractionAsyncResponse }),
            };
        });
}
