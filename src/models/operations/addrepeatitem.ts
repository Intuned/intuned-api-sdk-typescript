/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type AddRepeatItemGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
    /**
     * Project name
     */
    projectName: string;
};

export type AddRepeatItemRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
    /**
     * Queue ID
     */
    queueId: string;
    /**
     * queue repeat item
     */
    queueRepeatItemInput?: components.QueueRepeatItemInput | undefined;
};

export type AddRepeatItemResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully created repeatable item
     */
    addQueueRepeatItem?: components.AddQueueRepeatItem | undefined;
};

/** @internal */
export namespace AddRepeatItemGlobals$ {
    export const inboundSchema: z.ZodType<AddRepeatItemGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });

    export type Outbound = {
        workspaceId: string;
        projectName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddRepeatItemGlobals> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });
}

/** @internal */
export namespace AddRepeatItemRequest$ {
    export const inboundSchema: z.ZodType<AddRepeatItemRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
            queueId: z.string(),
            QueueRepeatItemInput: components.QueueRepeatItemInput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                queueId: v.queueId,
                ...(v.QueueRepeatItemInput === undefined
                    ? null
                    : { queueRepeatItemInput: v.QueueRepeatItemInput }),
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
        queueId: string;
        QueueRepeatItemInput?: components.QueueRepeatItemInput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddRepeatItemRequest> = z
        .object({
            projectName: z.string().optional(),
            queueId: z.string(),
            queueRepeatItemInput: components.QueueRepeatItemInput$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                queueId: v.queueId,
                ...(v.queueRepeatItemInput === undefined
                    ? null
                    : { QueueRepeatItemInput: v.queueRepeatItemInput }),
            };
        });
}

/** @internal */
export namespace AddRepeatItemResponse$ {
    export const inboundSchema: z.ZodType<AddRepeatItemResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            AddQueueRepeatItem: components.AddQueueRepeatItem$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.AddQueueRepeatItem === undefined
                    ? null
                    : { addQueueRepeatItem: v.AddQueueRepeatItem }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        AddQueueRepeatItem?: components.AddQueueRepeatItem$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AddRepeatItemResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            addQueueRepeatItem: components.AddQueueRepeatItem$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.addQueueRepeatItem === undefined
                    ? null
                    : { AddQueueRepeatItem: v.addQueueRepeatItem }),
            };
        });
}
