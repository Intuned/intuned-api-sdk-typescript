/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetQueuesGlobals = {
    /**
     * Workspace Id.
     */
    workspaceId?: string | undefined;
    /**
     * Project Name.
     */
    projectName?: string | undefined;
};

export type GetQueuesRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
};

export type GetQueuesResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful operation
     */
    queueInputs?: Array<components.QueueInput> | undefined;
};

/** @internal */
export namespace GetQueuesGlobals$ {
    export const inboundSchema: z.ZodType<GetQueuesGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string().optional(),
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });

    export type Outbound = {
        workspaceId?: string | undefined;
        projectName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetQueuesGlobals> = z
        .object({
            workspaceId: z.string().optional(),
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });
}

/** @internal */
export namespace GetQueuesRequest$ {
    export const inboundSchema: z.ZodType<GetQueuesRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetQueuesRequest> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });
}

/** @internal */
export namespace GetQueuesResponse$ {
    export const inboundSchema: z.ZodType<GetQueuesResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            QueueInputs: z.array(components.QueueInput$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.QueueInputs === undefined ? null : { queueInputs: v.QueueInputs }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        QueueInputs?: Array<components.QueueInput$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetQueuesResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            queueInputs: z.array(components.QueueInput$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.queueInputs === undefined ? null : { QueueInputs: v.queueInputs }),
            };
        });
}
