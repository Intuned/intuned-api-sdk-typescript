/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";
import * as z from "zod";

export type AppendQueueItemGlobals = {
    /**
     * Your workspace ID. [How to find it](/docs/guides/platform/how-to-get-a-workspace-id)?
     */
    workspaceId?: string | undefined;
};

export type AppendQueueItemRequest = {
    /**
     * Your project name. It is the name you provide when creating a project.
     */
    projectName: string;
    /**
     * Your queue ID. It is the ID of the queue you provided when creating it.
     */
    queueId: string;
    /**
     * queue item
     */
    queueItem: components.QueueItem;
};

/** @internal */
export const AppendQueueItemGlobals$inboundSchema: z.ZodType<
    AppendQueueItemGlobals,
    z.ZodTypeDef,
    unknown
> = z.object({
    workspaceId: z.string().optional(),
});

/** @internal */
export type AppendQueueItemGlobals$Outbound = {
    workspaceId?: string | undefined;
};

/** @internal */
export const AppendQueueItemGlobals$outboundSchema: z.ZodType<
    AppendQueueItemGlobals$Outbound,
    z.ZodTypeDef,
    AppendQueueItemGlobals
> = z.object({
    workspaceId: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppendQueueItemGlobals$ {
    /** @deprecated use `AppendQueueItemGlobals$inboundSchema` instead. */
    export const inboundSchema = AppendQueueItemGlobals$inboundSchema;
    /** @deprecated use `AppendQueueItemGlobals$outboundSchema` instead. */
    export const outboundSchema = AppendQueueItemGlobals$outboundSchema;
    /** @deprecated use `AppendQueueItemGlobals$Outbound` instead. */
    export type Outbound = AppendQueueItemGlobals$Outbound;
}

/** @internal */
export const AppendQueueItemRequest$inboundSchema: z.ZodType<
    AppendQueueItemRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        projectName: z.string(),
        queueId: z.string(),
        QueueItem: components.QueueItem$inboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            QueueItem: "queueItem",
        });
    });

/** @internal */
export type AppendQueueItemRequest$Outbound = {
    projectName: string;
    queueId: string;
    QueueItem: components.QueueItem$Outbound;
};

/** @internal */
export const AppendQueueItemRequest$outboundSchema: z.ZodType<
    AppendQueueItemRequest$Outbound,
    z.ZodTypeDef,
    AppendQueueItemRequest
> = z
    .object({
        projectName: z.string(),
        queueId: z.string(),
        queueItem: components.QueueItem$outboundSchema,
    })
    .transform((v) => {
        return remap$(v, {
            queueItem: "QueueItem",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AppendQueueItemRequest$ {
    /** @deprecated use `AppendQueueItemRequest$inboundSchema` instead. */
    export const inboundSchema = AppendQueueItemRequest$inboundSchema;
    /** @deprecated use `AppendQueueItemRequest$outboundSchema` instead. */
    export const outboundSchema = AppendQueueItemRequest$outboundSchema;
    /** @deprecated use `AppendQueueItemRequest$Outbound` instead. */
    export type Outbound = AppendQueueItemRequest$Outbound;
}
