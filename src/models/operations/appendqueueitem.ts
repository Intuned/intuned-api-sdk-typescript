/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type AppendQueueItemGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type AppendQueueItemRequest = {
    /**
     * Project name
     */
    projectName: string;
    /**
     * Queue ID
     */
    queueId: string;
    /**
     * queue item
     */
    queueItem?: components.QueueItem | undefined;
};

export type AppendQueueItemResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Queue item appended
     */
    addQueueItem?: components.AddQueueItem | undefined;
};

/** @internal */
export namespace AppendQueueItemGlobals$ {
    export const inboundSchema: z.ZodType<AppendQueueItemGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppendQueueItemGlobals> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace AppendQueueItemRequest$ {
    export const inboundSchema: z.ZodType<AppendQueueItemRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
            queueId: z.string(),
            QueueItem: components.QueueItem$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                queueId: v.queueId,
                ...(v.QueueItem === undefined ? null : { queueItem: v.QueueItem }),
            };
        });

    export type Outbound = {
        projectName: string;
        queueId: string;
        QueueItem?: components.QueueItem$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppendQueueItemRequest> = z
        .object({
            projectName: z.string(),
            queueId: z.string(),
            queueItem: components.QueueItem$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                queueId: v.queueId,
                ...(v.queueItem === undefined ? null : { QueueItem: v.queueItem }),
            };
        });
}

/** @internal */
export namespace AppendQueueItemResponse$ {
    export const inboundSchema: z.ZodType<AppendQueueItemResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            AddQueueItem: components.AddQueueItem$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.AddQueueItem === undefined ? null : { addQueueItem: v.AddQueueItem }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        AddQueueItem?: components.AddQueueItem$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AppendQueueItemResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            addQueueItem: components.AddQueueItem$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.addQueueItem === undefined ? null : { AddQueueItem: v.addQueueItem }),
            };
        });
}
