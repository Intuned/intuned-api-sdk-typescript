/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type PauseJobGlobals = {
    /**
     * Workspace Id.
     */
    workspaceId?: string | undefined;
    /**
     * Project Name.
     */
    projectName?: string | undefined;
};

export type PauseJobRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
    /**
     * Job ID
     */
    jobId: string;
};

export enum PauseJobMessage {
    Paused = "Paused",
}

/**
 * Paused successfully
 */
export type PauseJobResponseBody = {
    id?: string | undefined;
    message?: PauseJobMessage | undefined;
};

export type PauseJobResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Paused successfully
     */
    object?: PauseJobResponseBody | undefined;
};

/** @internal */
export namespace PauseJobGlobals$ {
    export const inboundSchema: z.ZodType<PauseJobGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string().optional(),
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });

    export type Outbound = {
        workspaceId?: string | undefined;
        projectName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PauseJobGlobals> = z
        .object({
            workspaceId: z.string().optional(),
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });
}

/** @internal */
export namespace PauseJobRequest$ {
    export const inboundSchema: z.ZodType<PauseJobRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
            jobId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                jobId: v.jobId,
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
        jobId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PauseJobRequest> = z
        .object({
            projectName: z.string().optional(),
            jobId: z.string(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                jobId: v.jobId,
            };
        });
}

/** @internal */
export namespace PauseJobMessage$ {
    export const inboundSchema = z.nativeEnum(PauseJobMessage);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace PauseJobResponseBody$ {
    export const inboundSchema: z.ZodType<PauseJobResponseBody, z.ZodTypeDef, unknown> = z
        .object({
            id: z.string().optional(),
            message: PauseJobMessage$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        message?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PauseJobResponseBody> = z
        .object({
            id: z.string().optional(),
            message: PauseJobMessage$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });
}

/** @internal */
export namespace PauseJobResponse$ {
    export const inboundSchema: z.ZodType<PauseJobResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            object: z.lazy(() => PauseJobResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        object?: PauseJobResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PauseJobResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            object: z.lazy(() => PauseJobResponseBody$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });
}
