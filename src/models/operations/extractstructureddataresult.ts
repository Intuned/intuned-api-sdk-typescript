/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ExtractStructuredDataResultGlobals = {
    /**
     * Workspace Id.
     */
    workspaceId?: string | undefined;
};

export type ExtractStructuredDataResultRequest = {
    /**
     * the operation ID provided by the start operation
     */
    operationId: string;
};

export type ExtractStructuredDataResultResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Result of the operation. Can be pending, completed or failed.
     */
    structuredDataExtractionAsyncResponse?:
        | components.StructuredDataExtractionAsyncResponse
        | undefined;
};

/** @internal */
export namespace ExtractStructuredDataResultGlobals$ {
    export const inboundSchema: z.ZodType<
        ExtractStructuredDataResultGlobals,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            workspaceId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
            };
        });

    export type Outbound = {
        workspaceId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ExtractStructuredDataResultGlobals
    > = z
        .object({
            workspaceId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
            };
        });
}

/** @internal */
export namespace ExtractStructuredDataResultRequest$ {
    export const inboundSchema: z.ZodType<
        ExtractStructuredDataResultRequest,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            operationId: z.string(),
        })
        .transform((v) => {
            return {
                operationId: v.operationId,
            };
        });

    export type Outbound = {
        operationId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ExtractStructuredDataResultRequest
    > = z
        .object({
            operationId: z.string(),
        })
        .transform((v) => {
            return {
                operationId: v.operationId,
            };
        });
}

/** @internal */
export namespace ExtractStructuredDataResultResponse$ {
    export const inboundSchema: z.ZodType<
        ExtractStructuredDataResultResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            StructuredDataExtractionAsyncResponse:
                components.StructuredDataExtractionAsyncResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.StructuredDataExtractionAsyncResponse === undefined
                    ? null
                    : {
                          structuredDataExtractionAsyncResponse:
                              v.StructuredDataExtractionAsyncResponse,
                      }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        StructuredDataExtractionAsyncResponse?:
            | components.StructuredDataExtractionAsyncResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        ExtractStructuredDataResultResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            structuredDataExtractionAsyncResponse:
                components.StructuredDataExtractionAsyncResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.structuredDataExtractionAsyncResponse === undefined
                    ? null
                    : {
                          StructuredDataExtractionAsyncResponse:
                              v.structuredDataExtractionAsyncResponse,
                      }),
            };
        });
}
