/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type FileExtractStructuredDataResultGlobals = {
    /**
     * Your workspace ID. [How to find it](https://docs.intunedhq.com/docs/management/workspace#finding-your-workspace-id)?
     */
    workspaceId: string;
};

export type FileExtractStructuredDataResultRequest = {
    /**
     * The ID for the requested file operation. This is obtained from the start request.
     */
    operationId: string;
};

export type FileExtractStructuredDataResultResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Result of the operation. Can be pending, completed or failed.
     */
    structuredDataExtractionAsyncResponse?:
        | components.StructuredDataExtractionAsyncResponse
        | undefined;
};

/** @internal */
export namespace FileExtractStructuredDataResultGlobals$ {
    export const inboundSchema: z.ZodType<
        FileExtractStructuredDataResultGlobals,
        z.ZodTypeDef,
        unknown
    > = z.object({
        workspaceId: z.string(),
    });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FileExtractStructuredDataResultGlobals
    > = z.object({
        workspaceId: z.string(),
    });
}

/** @internal */
export namespace FileExtractStructuredDataResultRequest$ {
    export const inboundSchema: z.ZodType<
        FileExtractStructuredDataResultRequest,
        z.ZodTypeDef,
        unknown
    > = z.object({
        operationId: z.string(),
    });

    export type Outbound = {
        operationId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FileExtractStructuredDataResultRequest
    > = z.object({
        operationId: z.string(),
    });
}

/** @internal */
export namespace FileExtractStructuredDataResultResponse$ {
    export const inboundSchema: z.ZodType<
        FileExtractStructuredDataResultResponse,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            StructuredDataExtractionAsyncResponse:
                components.StructuredDataExtractionAsyncResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                StructuredDataExtractionAsyncResponse: "structuredDataExtractionAsyncResponse",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        StructuredDataExtractionAsyncResponse?:
            | components.StructuredDataExtractionAsyncResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        FileExtractStructuredDataResultResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            structuredDataExtractionAsyncResponse:
                components.StructuredDataExtractionAsyncResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                structuredDataExtractionAsyncResponse: "StructuredDataExtractionAsyncResponse",
            });
        });
}
