/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateAuthSessionStartGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type CreateAuthSessionStartRequest = {
    /**
     * Project name
     */
    projectName: string;
};

export type CreateAuthSessionStartResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully started creation
     */
    createAuthSessionStart?: components.CreateAuthSessionStart | undefined;
};

/** @internal */
export namespace CreateAuthSessionStartGlobals$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionStartGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionStartGlobals> =
        z
            .object({
                workspaceId: z.string(),
            })
            .transform((v) => {
                return {
                    workspaceId: v.workspaceId,
                };
            });
}

/** @internal */
export namespace CreateAuthSessionStartRequest$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionStartRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
            };
        });

    export type Outbound = {
        projectName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionStartRequest> =
        z
            .object({
                projectName: z.string(),
            })
            .transform((v) => {
                return {
                    projectName: v.projectName,
                };
            });
}

/** @internal */
export namespace CreateAuthSessionStartResponse$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionStartResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CreateAuthSessionStart: components.CreateAuthSessionStart$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CreateAuthSessionStart === undefined
                    ? null
                    : { createAuthSessionStart: v.CreateAuthSessionStart }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CreateAuthSessionStart?: components.CreateAuthSessionStart$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionStartResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                createAuthSessionStart:
                    components.CreateAuthSessionStart$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.createAuthSessionStart === undefined
                        ? null
                        : { CreateAuthSessionStart: v.createAuthSessionStart }),
                };
            });
}
