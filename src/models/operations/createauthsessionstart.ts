/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type CreateAuthSessionStartGlobals = {
    /**
     * Your workspace ID. [How to find it](https://docs.intunedhq.com/docs/management/workspace#finding-your-workspace-id)?
     */
    workspaceId: string;
};

export type CreateAuthSessionStartRequest = {
    /**
     * Your project name. It is the name you provide when creating a project.
     */
    projectName: string;
    /**
     * create authentication session request
     */
    createAuthSessionRequest: components.CreateAuthSessionRequest;
};

export type CreateAuthSessionStartResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully started creation
     */
    createAuthSessionStart?: components.CreateAuthSessionStart | undefined;
};

/** @internal */
export namespace CreateAuthSessionStartGlobals$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionStartGlobals, z.ZodTypeDef, unknown> =
        z.object({
            workspaceId: z.string(),
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionStartGlobals> =
        z.object({
            workspaceId: z.string(),
        });
}

/** @internal */
export namespace CreateAuthSessionStartRequest$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionStartRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
            CreateAuthSessionRequest: components.CreateAuthSessionRequest$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                CreateAuthSessionRequest: "createAuthSessionRequest",
            });
        });

    export type Outbound = {
        projectName: string;
        CreateAuthSessionRequest: components.CreateAuthSessionRequest$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionStartRequest> =
        z
            .object({
                projectName: z.string(),
                createAuthSessionRequest: components.CreateAuthSessionRequest$.outboundSchema,
            })
            .transform((v) => {
                return remap$(v, {
                    createAuthSessionRequest: "CreateAuthSessionRequest",
                });
            });
}

/** @internal */
export namespace CreateAuthSessionStartResponse$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionStartResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CreateAuthSessionStart: components.CreateAuthSessionStart$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                CreateAuthSessionStart: "createAuthSessionStart",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CreateAuthSessionStart?: components.CreateAuthSessionStart$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionStartResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                createAuthSessionStart:
                    components.CreateAuthSessionStart$.outboundSchema.optional(),
            })
            .transform((v) => {
                return remap$(v, {
                    httpMeta: "HttpMeta",
                    createAuthSessionStart: "CreateAuthSessionStart",
                });
            });
}
