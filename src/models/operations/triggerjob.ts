/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type TriggerJobGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type TriggerJobRequest = {
    /**
     * Project name
     */
    projectName: string;
    /**
     * Job ID
     */
    jobId: string;
};

export type TriggerJobResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully triggered job manually
     */
    triggerJob?: components.TriggerJob | undefined;
};

/** @internal */
export namespace TriggerJobGlobals$ {
    export const inboundSchema: z.ZodType<TriggerJobGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggerJobGlobals> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace TriggerJobRequest$ {
    export const inboundSchema: z.ZodType<TriggerJobRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
            jobId: z.string(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                jobId: v.jobId,
            };
        });

    export type Outbound = {
        projectName: string;
        jobId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggerJobRequest> = z
        .object({
            projectName: z.string(),
            jobId: z.string(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                jobId: v.jobId,
            };
        });
}

/** @internal */
export namespace TriggerJobResponse$ {
    export const inboundSchema: z.ZodType<TriggerJobResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            TriggerJob: components.TriggerJob$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.TriggerJob === undefined ? null : { triggerJob: v.TriggerJob }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        TriggerJob?: components.TriggerJob$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TriggerJobResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            triggerJob: components.TriggerJob$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.triggerJob === undefined ? null : { TriggerJob: v.triggerJob }),
            };
        });
}
