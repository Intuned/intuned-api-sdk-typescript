/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateAuthSessionResumeGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type CreateAuthSessionResumeRequest = {
    /**
     * Project name
     */
    projectName: string;
    /**
     * Authentication session ID
     */
    authSessionId: string;
    /**
     * resume authnetication session creation request
     */
    authSessionCreateResume?: components.AuthSessionCreateResume | undefined;
};

export type CreateAuthSessionResumeResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully started creation
     */
    createAuthSessionResume?: components.CreateAuthSessionResume | undefined;
};

/** @internal */
export namespace CreateAuthSessionResumeGlobals$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionResumeGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionResumeGlobals> =
        z
            .object({
                workspaceId: z.string(),
            })
            .transform((v) => {
                return {
                    workspaceId: v.workspaceId,
                };
            });
}

/** @internal */
export namespace CreateAuthSessionResumeRequest$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionResumeRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
            authSessionId: z.string(),
            AuthSessionCreateResume: components.AuthSessionCreateResume$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                authSessionId: v.authSessionId,
                ...(v.AuthSessionCreateResume === undefined
                    ? null
                    : { authSessionCreateResume: v.AuthSessionCreateResume }),
            };
        });

    export type Outbound = {
        projectName: string;
        authSessionId: string;
        AuthSessionCreateResume?: components.AuthSessionCreateResume$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionResumeRequest> =
        z
            .object({
                projectName: z.string(),
                authSessionId: z.string(),
                authSessionCreateResume:
                    components.AuthSessionCreateResume$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    projectName: v.projectName,
                    authSessionId: v.authSessionId,
                    ...(v.authSessionCreateResume === undefined
                        ? null
                        : { AuthSessionCreateResume: v.authSessionCreateResume }),
                };
            });
}

/** @internal */
export namespace CreateAuthSessionResumeResponse$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionResumeResponse, z.ZodTypeDef, unknown> =
        z
            .object({
                HttpMeta: components.HTTPMetadata$.inboundSchema,
                CreateAuthSessionResume:
                    components.CreateAuthSessionResume$.inboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    httpMeta: v.HttpMeta,
                    ...(v.CreateAuthSessionResume === undefined
                        ? null
                        : { createAuthSessionResume: v.CreateAuthSessionResume }),
                };
            });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CreateAuthSessionResume?: components.CreateAuthSessionResume$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        CreateAuthSessionResumeResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            createAuthSessionResume: components.CreateAuthSessionResume$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.createAuthSessionResume === undefined
                    ? null
                    : { CreateAuthSessionResume: v.createAuthSessionResume }),
            };
        });
}
