/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ExtractTablesStartGlobals = {
    /**
     * Workspace Id.
     */
    workspaceId?: string | undefined;
};

export type ExtractTablesStartResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Operation started successfully
     */
    asyncPendingResponse?: components.AsyncPendingResponse | undefined;
};

/** @internal */
export namespace ExtractTablesStartGlobals$ {
    export const inboundSchema: z.ZodType<ExtractTablesStartGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
            };
        });

    export type Outbound = {
        workspaceId?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractTablesStartGlobals> = z
        .object({
            workspaceId: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
            };
        });
}

/** @internal */
export namespace ExtractTablesStartResponse$ {
    export const inboundSchema: z.ZodType<ExtractTablesStartResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            AsyncPendingResponse: components.AsyncPendingResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.AsyncPendingResponse === undefined
                    ? null
                    : { asyncPendingResponse: v.AsyncPendingResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        AsyncPendingResponse?: components.AsyncPendingResponse$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractTablesStartResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            asyncPendingResponse: components.AsyncPendingResponse$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.asyncPendingResponse === undefined
                    ? null
                    : { AsyncPendingResponse: v.asyncPendingResponse }),
            };
        });
}
