/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type GetRepeatItemsGlobals = {
    /**
     * Your workspace ID. [How to find it](https://docs.intunedhq.com/docs/management/workspace#finding-your-workspace-id)?
     */
    workspaceId: string;
};

export type GetRepeatItemsRequest = {
    /**
     * Your project name. It is the name you provide when creating a project.
     */
    projectName: string;
    /**
     * Your queue ID. It is the ID of the queue you provided when creating it.
     */
    queueId: string;
};

export type GetRepeatItemsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * List of queue repeatable items
     */
    getQueueRepeatItems?: Array<components.QueueRepeatItem> | undefined;
};

/** @internal */
export namespace GetRepeatItemsGlobals$ {
    export const inboundSchema: z.ZodType<GetRepeatItemsGlobals, z.ZodTypeDef, unknown> = z.object({
        workspaceId: z.string(),
    });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatItemsGlobals> =
        z.object({
            workspaceId: z.string(),
        });
}

/** @internal */
export namespace GetRepeatItemsRequest$ {
    export const inboundSchema: z.ZodType<GetRepeatItemsRequest, z.ZodTypeDef, unknown> = z.object({
        projectName: z.string(),
        queueId: z.string(),
    });

    export type Outbound = {
        projectName: string;
        queueId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatItemsRequest> =
        z.object({
            projectName: z.string(),
            queueId: z.string(),
        });
}

/** @internal */
export namespace GetRepeatItemsResponse$ {
    export const inboundSchema: z.ZodType<GetRepeatItemsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GetQueueRepeatItems: z.array(components.QueueRepeatItem$.inboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                GetQueueRepeatItems: "getQueueRepeatItems",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GetQueueRepeatItems?: Array<components.QueueRepeatItem$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatItemsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            getQueueRepeatItems: z.array(components.QueueRepeatItem$.outboundSchema).optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                getQueueRepeatItems: "GetQueueRepeatItems",
            });
        });
}
