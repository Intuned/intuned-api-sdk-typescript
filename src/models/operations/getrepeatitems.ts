/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetRepeatItemsGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type GetRepeatItemsRequest = {
    /**
     * Project name
     */
    projectName: string;
    /**
     * Queue ID
     */
    queueId: string;
};

export type GetRepeatItemsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * List of queue repeatable items
     */
    getQueueRepeatItems?: Array<components.QueueRepeatItem> | undefined;
};

/** @internal */
export namespace GetRepeatItemsGlobals$ {
    export const inboundSchema: z.ZodType<GetRepeatItemsGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatItemsGlobals> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace GetRepeatItemsRequest$ {
    export const inboundSchema: z.ZodType<GetRepeatItemsRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
            queueId: z.string(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                queueId: v.queueId,
            };
        });

    export type Outbound = {
        projectName: string;
        queueId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatItemsRequest> = z
        .object({
            projectName: z.string(),
            queueId: z.string(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                queueId: v.queueId,
            };
        });
}

/** @internal */
export namespace GetRepeatItemsResponse$ {
    export const inboundSchema: z.ZodType<GetRepeatItemsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GetQueueRepeatItems: z.array(components.QueueRepeatItem$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.GetQueueRepeatItems === undefined
                    ? null
                    : { getQueueRepeatItems: v.GetQueueRepeatItems }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GetQueueRepeatItems?: Array<components.QueueRepeatItem$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatItemsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            getQueueRepeatItems: z.array(components.QueueRepeatItem$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.getQueueRepeatItems === undefined
                    ? null
                    : { GetQueueRepeatItems: v.getQueueRepeatItems }),
            };
        });
}
