/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type TerminateJobRunGlobals = {
    /**
     * Your workspace ID. [How to find it](https://docs.intunedhq.com/docs/management/workspace#finding-your-workspace-id)?
     */
    workspaceId: string;
};

export type TerminateJobRunRequest = {
    /**
     * Your project name. It is the name you provide when creating a project.
     */
    projectName: string;
    /**
     * Your job ID. It is the ID of the job you provide when creating it.
     */
    jobId: string;
    /**
     * The job run ID. This can be obtained from the get job runs endpoint.
     */
    runId: string;
};

export type TerminateJobRunResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully terminated job run
     */
    terminateJobRun?: components.TerminateJobRun | undefined;
};

/** @internal */
export namespace TerminateJobRunGlobals$ {
    export const inboundSchema: z.ZodType<TerminateJobRunGlobals, z.ZodTypeDef, unknown> = z.object(
        {
            workspaceId: z.string(),
        }
    );

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TerminateJobRunGlobals> =
        z.object({
            workspaceId: z.string(),
        });
}

/** @internal */
export namespace TerminateJobRunRequest$ {
    export const inboundSchema: z.ZodType<TerminateJobRunRequest, z.ZodTypeDef, unknown> = z.object(
        {
            projectName: z.string(),
            jobId: z.string(),
            runId: z.string(),
        }
    );

    export type Outbound = {
        projectName: string;
        jobId: string;
        runId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TerminateJobRunRequest> =
        z.object({
            projectName: z.string(),
            jobId: z.string(),
            runId: z.string(),
        });
}

/** @internal */
export namespace TerminateJobRunResponse$ {
    export const inboundSchema: z.ZodType<TerminateJobRunResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            TerminateJobRun: components.TerminateJobRun$.inboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
                TerminateJobRun: "terminateJobRun",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        TerminateJobRun?: components.TerminateJobRun$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TerminateJobRunResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            terminateJobRun: components.TerminateJobRun$.outboundSchema.optional(),
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
                terminateJobRun: "TerminateJobRun",
            });
        });
}
