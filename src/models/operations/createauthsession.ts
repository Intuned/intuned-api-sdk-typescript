/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateAuthSessionGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
    /**
     * Project name
     */
    projectName: string;
};

export type CreateAuthSessionRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
};

export type CreateAuthSessionResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully started creation
     */
    createAuthSessionStart?: components.CreateAuthSessionStart | undefined;
};

/** @internal */
export namespace CreateAuthSessionGlobals$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });

    export type Outbound = {
        workspaceId: string;
        projectName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionGlobals> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });
}

/** @internal */
export namespace CreateAuthSessionRequest$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionRequest> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });
}

/** @internal */
export namespace CreateAuthSessionResponse$ {
    export const inboundSchema: z.ZodType<CreateAuthSessionResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CreateAuthSessionStart: components.CreateAuthSessionStart$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CreateAuthSessionStart === undefined
                    ? null
                    : { createAuthSessionStart: v.CreateAuthSessionStart }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CreateAuthSessionStart?: components.CreateAuthSessionStart$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateAuthSessionResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            createAuthSessionStart: components.CreateAuthSessionStart$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.createAuthSessionStart === undefined
                    ? null
                    : { CreateAuthSessionStart: v.createAuthSessionStart }),
            };
        });
}
