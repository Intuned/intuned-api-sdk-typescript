/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetRepeatQueueItemGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type GetRepeatQueueItemRequest = {
    /**
     * Project name
     */
    projectName: string;
    /**
     * Queue ID
     */
    queueId: string;
    /**
     * Repeat Item ID
     */
    itemId: string;
};

export type GetRepeatQueueItemResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Queue repeatable item
     */
    queueRepeatItem?: components.QueueRepeatItem | undefined;
};

/** @internal */
export namespace GetRepeatQueueItemGlobals$ {
    export const inboundSchema: z.ZodType<GetRepeatQueueItemGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatQueueItemGlobals> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace GetRepeatQueueItemRequest$ {
    export const inboundSchema: z.ZodType<GetRepeatQueueItemRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
            queueId: z.string(),
            itemId: z.string(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                queueId: v.queueId,
                itemId: v.itemId,
            };
        });

    export type Outbound = {
        projectName: string;
        queueId: string;
        itemId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatQueueItemRequest> = z
        .object({
            projectName: z.string(),
            queueId: z.string(),
            itemId: z.string(),
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                queueId: v.queueId,
                itemId: v.itemId,
            };
        });
}

/** @internal */
export namespace GetRepeatQueueItemResponse$ {
    export const inboundSchema: z.ZodType<GetRepeatQueueItemResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            QueueRepeatItem: components.QueueRepeatItem$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.QueueRepeatItem === undefined
                    ? null
                    : { queueRepeatItem: v.QueueRepeatItem }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        QueueRepeatItem?: components.QueueRepeatItem$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetRepeatQueueItemResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            queueRepeatItem: components.QueueRepeatItem$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.queueRepeatItem === undefined
                    ? null
                    : { QueueRepeatItem: v.queueRepeatItem }),
            };
        });
}
