/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type CreateJobGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type CreateJobRequest = {
    /**
     * Project name
     */
    projectName: string;
    /**
     * create job request
     */
    jobInput: components.JobInput;
};

export type CreateJobResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successfully created job
     */
    createJob?: components.CreateJob | undefined;
};

/** @internal */
export namespace CreateJobGlobals$ {
    export const inboundSchema: z.ZodType<CreateJobGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateJobGlobals> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace CreateJobRequest$ {
    export const inboundSchema: z.ZodType<CreateJobRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string(),
            JobInput: components.JobInput$.inboundSchema,
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                jobInput: v.JobInput,
            };
        });

    export type Outbound = {
        projectName: string;
        JobInput: components.JobInput$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateJobRequest> = z
        .object({
            projectName: z.string(),
            jobInput: components.JobInput$.outboundSchema,
        })
        .transform((v) => {
            return {
                projectName: v.projectName,
                JobInput: v.jobInput,
            };
        });
}

/** @internal */
export namespace CreateJobResponse$ {
    export const inboundSchema: z.ZodType<CreateJobResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CreateJob: components.CreateJob$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CreateJob === undefined ? null : { createJob: v.CreateJob }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CreateJob?: components.CreateJob$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CreateJobResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            createJob: components.CreateJob$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.createJob === undefined ? null : { CreateJob: v.createJob }),
            };
        });
}
