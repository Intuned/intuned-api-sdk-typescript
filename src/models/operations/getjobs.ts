/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetJobsGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
    /**
     * Project name
     */
    projectName: string;
};

export type GetJobsRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
};

export type GetJobsResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Array of jobs
     */
    getJobs?: Array<components.Job> | undefined;
};

/** @internal */
export namespace GetJobsGlobals$ {
    export const inboundSchema: z.ZodType<GetJobsGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });

    export type Outbound = {
        workspaceId: string;
        projectName: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetJobsGlobals> = z
        .object({
            workspaceId: z.string(),
            projectName: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
                projectName: v.projectName,
            };
        });
}

/** @internal */
export namespace GetJobsRequest$ {
    export const inboundSchema: z.ZodType<GetJobsRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetJobsRequest> = z
        .object({
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });
}

/** @internal */
export namespace GetJobsResponse$ {
    export const inboundSchema: z.ZodType<GetJobsResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            GetJobs: z.array(components.Job$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.GetJobs === undefined ? null : { getJobs: v.GetJobs }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        GetJobs?: Array<components.Job$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetJobsResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            getJobs: z.array(components.Job$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.getJobs === undefined ? null : { GetJobs: v.getJobs }),
            };
        });
}
