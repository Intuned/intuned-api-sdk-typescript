/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type ExtractMarkdownResultGlobals = {
    /**
     * Workspace ID
     */
    workspaceId: string;
};

export type ExtractMarkdownResultRequest = {
    /**
     * Operation Id.
     */
    operationId: string;
};

export type ExtractMarkdownResultResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Result of the operation. Can be pending, completed or failed.
     */
    markdownExtractionAsyncResponse?: components.MarkdownExtractionAsyncResponse | undefined;
};

/** @internal */
export namespace ExtractMarkdownResultGlobals$ {
    export const inboundSchema: z.ZodType<ExtractMarkdownResultGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractMarkdownResultGlobals> = z
        .object({
            workspaceId: z.string(),
        })
        .transform((v) => {
            return {
                workspaceId: v.workspaceId,
            };
        });
}

/** @internal */
export namespace ExtractMarkdownResultRequest$ {
    export const inboundSchema: z.ZodType<ExtractMarkdownResultRequest, z.ZodTypeDef, unknown> = z
        .object({
            operationId: z.string(),
        })
        .transform((v) => {
            return {
                operationId: v.operationId,
            };
        });

    export type Outbound = {
        operationId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractMarkdownResultRequest> = z
        .object({
            operationId: z.string(),
        })
        .transform((v) => {
            return {
                operationId: v.operationId,
            };
        });
}

/** @internal */
export namespace ExtractMarkdownResultResponse$ {
    export const inboundSchema: z.ZodType<ExtractMarkdownResultResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            MarkdownExtractionAsyncResponse:
                components.MarkdownExtractionAsyncResponse$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.MarkdownExtractionAsyncResponse === undefined
                    ? null
                    : { markdownExtractionAsyncResponse: v.MarkdownExtractionAsyncResponse }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        MarkdownExtractionAsyncResponse?:
            | components.MarkdownExtractionAsyncResponse$.Outbound
            | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ExtractMarkdownResultResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                markdownExtractionAsyncResponse:
                    components.MarkdownExtractionAsyncResponse$.outboundSchema.optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.markdownExtractionAsyncResponse === undefined
                        ? null
                        : { MarkdownExtractionAsyncResponse: v.markdownExtractionAsyncResponse }),
                };
            });
}
