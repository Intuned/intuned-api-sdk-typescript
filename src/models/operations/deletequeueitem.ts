/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../lib/primitives";
import * as components from "../components";
import * as z from "zod";

export type DeleteQueueItemGlobals = {
    /**
     * Your workspace ID. [How to find it](https://docs.intunedhq.com/docs/management/workspace#finding-your-workspace-id)?
     */
    workspaceId: string;
};

export type DeleteQueueItemRequest = {
    /**
     * Your project name. It is the name you provide when creating a project.
     */
    projectName: string;
    /**
     * Your queue ID. It is the ID of the queue you provided when creating it.
     */
    queueId: string;
    /**
     * Queue item run ID, obtained from the append queue item endpoint response.
     */
    itemRunId: string;
};

export type DeleteQueueItemResponse = {
    httpMeta: components.HTTPMetadata;
};

/** @internal */
export namespace DeleteQueueItemGlobals$ {
    export const inboundSchema: z.ZodType<DeleteQueueItemGlobals, z.ZodTypeDef, unknown> = z.object(
        {
            workspaceId: z.string(),
        }
    );

    export type Outbound = {
        workspaceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteQueueItemGlobals> =
        z.object({
            workspaceId: z.string(),
        });
}

/** @internal */
export namespace DeleteQueueItemRequest$ {
    export const inboundSchema: z.ZodType<DeleteQueueItemRequest, z.ZodTypeDef, unknown> = z.object(
        {
            projectName: z.string(),
            queueId: z.string(),
            itemRunId: z.string(),
        }
    );

    export type Outbound = {
        projectName: string;
        queueId: string;
        itemRunId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteQueueItemRequest> =
        z.object({
            projectName: z.string(),
            queueId: z.string(),
            itemRunId: z.string(),
        });
}

/** @internal */
export namespace DeleteQueueItemResponse$ {
    export const inboundSchema: z.ZodType<DeleteQueueItemResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                HttpMeta: "httpMeta",
            });
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DeleteQueueItemResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
        })
        .transform((v) => {
            return remap$(v, {
                httpMeta: "HttpMeta",
            });
        });
}
