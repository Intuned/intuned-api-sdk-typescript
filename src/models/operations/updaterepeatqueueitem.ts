/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type UpdateRepeatQueueItemGlobals = {
    /**
     * Workspace Id.
     */
    workspaceId?: string | undefined;
    /**
     * Project Name.
     */
    projectName?: string | undefined;
};

export type UpdateRepeatQueueItemRequest = {
    /**
     * Project name
     */
    projectName?: string | undefined;
    /**
     * Queue ID
     */
    queueId: string;
    /**
     * Queue repeatable item ID
     */
    itemId: string;
    /**
     * queue repeatable item
     */
    queueRepeatItemInput?: components.QueueRepeatItemInput | undefined;
};

export enum UpdateRepeatQueueItemMessage {
    RepeatableItemUpdated = "repeatable item updated",
}

/**
 * Queue repeatable item updated
 */
export type UpdateRepeatQueueItemResponseBody = {
    message?: UpdateRepeatQueueItemMessage | undefined;
};

export type UpdateRepeatQueueItemResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Queue repeatable item updated
     */
    object?: UpdateRepeatQueueItemResponseBody | undefined;
};

/** @internal */
export namespace UpdateRepeatQueueItemGlobals$ {
    export const inboundSchema: z.ZodType<UpdateRepeatQueueItemGlobals, z.ZodTypeDef, unknown> = z
        .object({
            workspaceId: z.string().optional(),
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });

    export type Outbound = {
        workspaceId?: string | undefined;
        projectName?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateRepeatQueueItemGlobals> = z
        .object({
            workspaceId: z.string().optional(),
            projectName: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.workspaceId === undefined ? null : { workspaceId: v.workspaceId }),
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
            };
        });
}

/** @internal */
export namespace UpdateRepeatQueueItemRequest$ {
    export const inboundSchema: z.ZodType<UpdateRepeatQueueItemRequest, z.ZodTypeDef, unknown> = z
        .object({
            projectName: z.string().optional(),
            queueId: z.string(),
            itemId: z.string(),
            QueueRepeatItemInput: components.QueueRepeatItemInput$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                queueId: v.queueId,
                itemId: v.itemId,
                ...(v.QueueRepeatItemInput === undefined
                    ? null
                    : { queueRepeatItemInput: v.QueueRepeatItemInput }),
            };
        });

    export type Outbound = {
        projectName?: string | undefined;
        queueId: string;
        itemId: string;
        QueueRepeatItemInput?: components.QueueRepeatItemInput$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateRepeatQueueItemRequest> = z
        .object({
            projectName: z.string().optional(),
            queueId: z.string(),
            itemId: z.string(),
            queueRepeatItemInput: components.QueueRepeatItemInput$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.projectName === undefined ? null : { projectName: v.projectName }),
                queueId: v.queueId,
                itemId: v.itemId,
                ...(v.queueRepeatItemInput === undefined
                    ? null
                    : { QueueRepeatItemInput: v.queueRepeatItemInput }),
            };
        });
}

/** @internal */
export namespace UpdateRepeatQueueItemMessage$ {
    export const inboundSchema = z.nativeEnum(UpdateRepeatQueueItemMessage);
    export const outboundSchema = inboundSchema;
}

/** @internal */
export namespace UpdateRepeatQueueItemResponseBody$ {
    export const inboundSchema: z.ZodType<
        UpdateRepeatQueueItemResponseBody,
        z.ZodTypeDef,
        unknown
    > = z
        .object({
            message: UpdateRepeatQueueItemMessage$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });

    export type Outbound = {
        message?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        UpdateRepeatQueueItemResponseBody
    > = z
        .object({
            message: UpdateRepeatQueueItemMessage$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.message === undefined ? null : { message: v.message }),
            };
        });
}

/** @internal */
export namespace UpdateRepeatQueueItemResponse$ {
    export const inboundSchema: z.ZodType<UpdateRepeatQueueItemResponse, z.ZodTypeDef, unknown> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            object: z.lazy(() => UpdateRepeatQueueItemResponseBody$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.object === undefined ? null : { object: v.object }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        object?: UpdateRepeatQueueItemResponseBody$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, UpdateRepeatQueueItemResponse> =
        z
            .object({
                httpMeta: components.HTTPMetadata$.outboundSchema,
                object: z.lazy(() => UpdateRepeatQueueItemResponseBody$.outboundSchema).optional(),
            })
            .transform((v) => {
                return {
                    HttpMeta: v.httpMeta,
                    ...(v.object === undefined ? null : { object: v.object }),
                };
            });
}
