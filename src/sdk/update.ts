/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { projectAuthSessionsUpdateResult } from "../funcs/projectAuthSessionsUpdateResult.js";
import { projectAuthSessionsUpdateResume } from "../funcs/projectAuthSessionsUpdateResume.js";
import { projectAuthSessionsUpdateStart } from "../funcs/projectAuthSessionsUpdateStart.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as components from "../models/components/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Update extends ClientSDK {
  /**
   * Update Auth Session - Start
   *
   * @remarks
   * Starts updating process of an authentication session.
   */
  async start(
    projectName: string,
    updateAuthSessionRequest: components.UpdateAuthSessionRequest,
    options?: RequestOptions,
  ): Promise<components.CreateOrUpdateAuthSessionStart> {
    return unwrapAsync(projectAuthSessionsUpdateStart(
      this,
      projectName,
      updateAuthSessionRequest,
      options,
    ));
  }

  /**
   * Update Auth Session - Result
   *
   * @remarks
   * Gets authentication session creation operation result.
   */
  async result(
    projectName: string,
    operationId: string,
    options?: RequestOptions,
  ): Promise<components.AuthSessionCreateResult> {
    return unwrapAsync(projectAuthSessionsUpdateResult(
      this,
      projectName,
      operationId,
      options,
    ));
  }

  /**
   * Update Auth Session -  Resume
   *
   * @remarks
   * Resume authentication session creation operation. This is needed if the operation requests more info.
   */
  async resume(
    projectName: string,
    operationId: string,
    authSessionCreateResume: components.AuthSessionCreateResume,
    options?: RequestOptions,
  ): Promise<components.CreateAuthSessionResume> {
    return unwrapAsync(projectAuthSessionsUpdateResume(
      this,
      projectName,
      operationId,
      authSessionCreateResume,
      options,
    ));
  }
}
