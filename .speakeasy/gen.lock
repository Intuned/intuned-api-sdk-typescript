lockVersion: 2.0.0
id: 47dbe124-c912-4a0e-add0-c2f6f79a46e0
management:
  docChecksum: 54810a66757fc7503202eb707efa488c
  docVersion: 0.0.1
  speakeasyVersion: 1.393.0
  generationVersion: 2.413.0
  releaseVersion: 0.3.12
  configChecksum: aa36aacb7459bfd3c11c20880fa14600
  published: true
features:
  typescript:
    additionalDependencies: 0.1.0
    additionalProperties: 0.1.1
    constsAndDefaults: 0.1.11
    core: 3.17.0
    defaultEnabledRetries: 0.1.0
    devContainers: 2.90.0
    envVarSecurityUsage: 0.1.1
    flattening: 2.81.1
    globalSecurity: 2.82.11
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.4
    globals: 2.82.1
    hiddenGlobals: 0.1.0
    nameOverrides: 2.81.2
    nullables: 0.1.0
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.1.0
    unions: 2.85.7
    webhooks: 1.0.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .eslintrc.cjs
  - .gitattributes
  - .npmignore
  - CONTRIBUTING.md
  - FUNCTIONS.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/components/action.md
  - docs/models/components/active.md
  - docs/models/components/addqueueitem.md
  - docs/models/components/addqueueitemstatus.md
  - docs/models/components/addqueuerepeatitem.md
  - docs/models/components/addqueuerepeatitemstatus.md
  - docs/models/components/amazons3sink.md
  - docs/models/components/amazons3sinktype.md
  - docs/models/components/apiparameters.md
  - docs/models/components/asyncfilependingresponse.md
  - docs/models/components/asyncfilependingresponsestatus.md
  - docs/models/components/asyncresultresponse.md
  - docs/models/components/asyncruncompletedresponse.md
  - docs/models/components/asyncruncompletedresponsestatus.md
  - docs/models/components/asyncrunfailedresponse.md
  - docs/models/components/asyncrunfailedresponsestatus.md
  - docs/models/components/asyncrunpendingresponse.md
  - docs/models/components/asyncrunpendingresponsestatus.md
  - docs/models/components/authsession.md
  - docs/models/components/authsessioncreatedoneresult.md
  - docs/models/components/authsessioncreatedoneresultstatus.md
  - docs/models/components/authsessioncreatefailedresult.md
  - docs/models/components/authsessioncreatefailedresultstatus.md
  - docs/models/components/authsessioncreatependingresult.md
  - docs/models/components/authsessioncreatependingresultstatus.md
  - docs/models/components/authsessioncreaterequestedmoreinforesult.md
  - docs/models/components/authsessioncreaterequestedmoreinforesultstatus.md
  - docs/models/components/authsessioncreateresult.md
  - docs/models/components/authsessioncreateresume.md
  - docs/models/components/authsessioninfo.md
  - docs/models/components/authsessioninfostatus.md
  - docs/models/components/calendars.md
  - docs/models/components/completedqueueitemresult.md
  - docs/models/components/completedqueueitemresultstatus.md
  - docs/models/components/createauthsessionrequest.md
  - docs/models/components/createauthsessionresume.md
  - docs/models/components/createauthsessionresumestatus.md
  - docs/models/components/createjob.md
  - docs/models/components/createorupdateauthsessionstart.md
  - docs/models/components/createorupdateauthsessionstartstatus.md
  - docs/models/components/createqueue.md
  - docs/models/components/details.md
  - docs/models/components/detailsaction.md
  - docs/models/components/detailsrequesttype.md
  - docs/models/components/end.md
  - docs/models/components/every.md
  - docs/models/components/extractstructureddataimagestrategy.md
  - docs/models/components/extractstructureddataimagestrategytype.md
  - docs/models/components/extractstructureddatamarkdownstrategy.md
  - docs/models/components/extractstructureddatamarkdownstrategytype.md
  - docs/models/components/extractstructureddatarequest.md
  - docs/models/components/extractstructureddatastrategy.md
  - docs/models/components/failedqueueitemresult.md
  - docs/models/components/failedqueueitemresultstatus.md
  - docs/models/components/filebase64source.md
  - docs/models/components/filebase64sourcetype.md
  - docs/models/components/filefailedresponse.md
  - docs/models/components/filefailedresponsestatus.md
  - docs/models/components/filesource.md
  - docs/models/components/filet.md
  - docs/models/components/fileurlsource.md
  - docs/models/components/fileurlsourcetype.md
  - docs/models/components/generalextractrequest.md
  - docs/models/components/imageaiextractionmodel.md
  - docs/models/components/imagefile.md
  - docs/models/components/intervals.md
  - docs/models/components/job.md
  - docs/models/components/jobcalendarrange.md
  - docs/models/components/jobcalendarvalue.md
  - docs/models/components/jobconfiguration.md
  - docs/models/components/jobconfigurationresponse.md
  - docs/models/components/jobconfigurationrunmode.md
  - docs/models/components/jobinput.md
  - docs/models/components/jobpayload.md
  - docs/models/components/jobretry.md
  - docs/models/components/jobretryresponse.md
  - docs/models/components/jobrun.md
  - docs/models/components/jobrunstatus.md
  - docs/models/components/jobruntype.md
  - docs/models/components/jobschedule.md
  - docs/models/components/jobsink.md
  - docs/models/components/jobsinkresultpayload.md
  - docs/models/components/jobsinkresultpayloadauthsession.md
  - docs/models/components/jobstatestatus.md
  - docs/models/components/markdownextractionasyncresponse.md
  - docs/models/components/markdownextractionsuccessfulresponse.md
  - docs/models/components/markdownextractionsuccessfulresponsestatus.md
  - docs/models/components/markdownextractionsyncresponse.md
  - docs/models/components/message.md
  - docs/models/components/millisecondsrange.md
  - docs/models/components/msformattedrange.md
  - docs/models/components/multiplechoice.md
  - docs/models/components/otp.md
  - docs/models/components/parameterst.md
  - docs/models/components/paused.md
  - docs/models/components/pausejob.md
  - docs/models/components/pausejobmessage.md
  - docs/models/components/pdffile.md
  - docs/models/components/pdffiletype.md
  - docs/models/components/pendingqueueitemresult.md
  - docs/models/components/pendingqueueitemresultstatus.md
  - docs/models/components/project.md
  - docs/models/components/projectjob.md
  - docs/models/components/projectjobrun.md
  - docs/models/components/projectqueue.md
  - docs/models/components/queueconfiguration.md
  - docs/models/components/queueconfigurationrunmode.md
  - docs/models/components/queuedqueueitemresult.md
  - docs/models/components/queuedqueueitemresultstatus.md
  - docs/models/components/queueinput.md
  - docs/models/components/queueitem.md
  - docs/models/components/queueitemresult.md
  - docs/models/components/queuerepeatitem.md
  - docs/models/components/queuerepeatiteminput.md
  - docs/models/components/queuesinkresultpayload.md
  - docs/models/components/queuesinkresultpayloadauthsession.md
  - docs/models/components/queuesinkresultpayloadproject.md
  - docs/models/components/randomwait.md
  - docs/models/components/ratelimits.md
  - docs/models/components/requesttype.md
  - docs/models/components/result.md
  - docs/models/components/resumejob.md
  - docs/models/components/resumejobmessage.md
  - docs/models/components/retry.md
  - docs/models/components/runmode.md
  - docs/models/components/runprojectapirequest.md
  - docs/models/components/schedule.md
  - docs/models/components/security.md
  - docs/models/components/sinkresult.md
  - docs/models/components/spreadsheetfile.md
  - docs/models/components/spreadsheetfiletype.md
  - docs/models/components/start.md
  - docs/models/components/startauthsessionrecorder.md
  - docs/models/components/startauthsessionrecorderrequest.md
  - docs/models/components/state.md
  - docs/models/components/statestatus.md
  - docs/models/components/status.md
  - docs/models/components/structureddataextractionasyncresponse.md
  - docs/models/components/structureddataextractionfilesuccessfulresponse.md
  - docs/models/components/structureddataextractionsyncresponse.md
  - docs/models/components/summary.md
  - docs/models/components/syncresultresponse.md
  - docs/models/components/tableextractionasyncresponse.md
  - docs/models/components/tableextractionsuccessfulresponse.md
  - docs/models/components/tableextractionsuccessfulresponsestatus.md
  - docs/models/components/tableextractionsyncresponse.md
  - docs/models/components/terminatejobrun.md
  - docs/models/components/terminatejobrunmessage.md
  - docs/models/components/textaiextractionmodel.md
  - docs/models/components/triggerjob.md
  - docs/models/components/triggerjobmessage.md
  - docs/models/components/two.md
  - docs/models/components/type.md
  - docs/models/components/updateauthsessionrequest.md
  - docs/models/components/updatequeuerepeatitem.md
  - docs/models/components/updatequeuerepeatitemmessage.md
  - docs/models/components/webhookapiinfo.md
  - docs/models/components/webhookapiinforesult.md
  - docs/models/components/webhookapiinforesultcompleted.md
  - docs/models/components/webhookapiinforesultcompletedstatus.md
  - docs/models/components/webhookapiinforesultfailed.md
  - docs/models/components/webhookapiinforesultfailedstatus.md
  - docs/models/components/webhooksink.md
  - docs/models/components/webhooksinktype.md
  - docs/models/errors/apierrorinvalidinput.md
  - docs/models/errors/apierrorunauthorized.md
  - docs/models/operations/appendqueueitemglobals.md
  - docs/models/operations/appendqueueitemrequest.md
  - docs/models/operations/appendrepeatitemglobals.md
  - docs/models/operations/appendrepeatitemrequest.md
  - docs/models/operations/createauthsessionresultglobals.md
  - docs/models/operations/createauthsessionresultrequest.md
  - docs/models/operations/createauthsessionresumeglobals.md
  - docs/models/operations/createauthsessionresumerequest.md
  - docs/models/operations/createjobglobals.md
  - docs/models/operations/createjobrequest.md
  - docs/models/operations/createorupdateauthsessionstartglobals.md
  - docs/models/operations/createorupdateauthsessionstartrequest.md
  - docs/models/operations/createqueueglobals.md
  - docs/models/operations/createqueuerequest.md
  - docs/models/operations/deleteauthsessionglobals.md
  - docs/models/operations/deleteauthsessionrequest.md
  - docs/models/operations/deletejobglobals.md
  - docs/models/operations/deletejobrequest.md
  - docs/models/operations/deletequeueglobals.md
  - docs/models/operations/deletequeueitemglobals.md
  - docs/models/operations/deletequeueitemrequest.md
  - docs/models/operations/deletequeuerequest.md
  - docs/models/operations/deleterepeatqueueitemglobals.md
  - docs/models/operations/deleterepeatqueueitemrequest.md
  - docs/models/operations/fileextractmarkdownresultglobals.md
  - docs/models/operations/fileextractmarkdownresultrequest.md
  - docs/models/operations/fileextractmarkdownstartglobals.md
  - docs/models/operations/fileextractmarkdownsyncglobals.md
  - docs/models/operations/fileextractstructureddataresultglobals.md
  - docs/models/operations/fileextractstructureddataresultrequest.md
  - docs/models/operations/fileextractstructureddatastartglobals.md
  - docs/models/operations/fileextractstructureddatasyncglobals.md
  - docs/models/operations/fileextracttablesresultglobals.md
  - docs/models/operations/fileextracttablesresultrequest.md
  - docs/models/operations/fileextracttablesstartglobals.md
  - docs/models/operations/fileextracttablessyncglobals.md
  - docs/models/operations/getauthsessionglobals.md
  - docs/models/operations/getauthsessionrequest.md
  - docs/models/operations/getauthsessionsglobals.md
  - docs/models/operations/getauthsessionsrequest.md
  - docs/models/operations/getjobglobals.md
  - docs/models/operations/getjobrequest.md
  - docs/models/operations/getjobrunsglobals.md
  - docs/models/operations/getjobrunsrequest.md
  - docs/models/operations/getjobsglobals.md
  - docs/models/operations/getjobsrequest.md
  - docs/models/operations/getqueueglobals.md
  - docs/models/operations/getqueueitemresultglobals.md
  - docs/models/operations/getqueueitemresultrequest.md
  - docs/models/operations/getqueuerequest.md
  - docs/models/operations/getqueuesglobals.md
  - docs/models/operations/getqueuesrequest.md
  - docs/models/operations/getrepeatitemsglobals.md
  - docs/models/operations/getrepeatitemsrequest.md
  - docs/models/operations/getrepeatqueueitemglobals.md
  - docs/models/operations/getrepeatqueueitemrequest.md
  - docs/models/operations/pausejobglobals.md
  - docs/models/operations/pausejobrequest.md
  - docs/models/operations/resumejobglobals.md
  - docs/models/operations/resumejobrequest.md
  - docs/models/operations/runapiresultglobals.md
  - docs/models/operations/runapiresultrequest.md
  - docs/models/operations/runapistartglobals.md
  - docs/models/operations/runapistartrequest.md
  - docs/models/operations/runapisyncglobals.md
  - docs/models/operations/runapisyncrequest.md
  - docs/models/operations/startauthsessionrecorderglobals.md
  - docs/models/operations/startauthsessionrecorderrequest.md
  - docs/models/operations/terminatejobrunglobals.md
  - docs/models/operations/terminatejobrunrequest.md
  - docs/models/operations/triggerjobglobals.md
  - docs/models/operations/triggerjobrequest.md
  - docs/models/operations/updateauthsessionresultglobals.md
  - docs/models/operations/updateauthsessionresultrequest.md
  - docs/models/operations/updateauthsessionresumeglobals.md
  - docs/models/operations/updateauthsessionresumerequest.md
  - docs/models/operations/updateauthsessionstartglobals.md
  - docs/models/operations/updateauthsessionstartrequest.md
  - docs/models/operations/updaterepeatqueueitemglobals.md
  - docs/models/operations/updaterepeatqueueitemrequest.md
  - docs/sdks/authsessions/README.md
  - docs/sdks/create/README.md
  - docs/sdks/extractmarkdown/README.md
  - docs/sdks/extractstructureddata/README.md
  - docs/sdks/extracttables/README.md
  - docs/sdks/files/README.md
  - docs/sdks/intunedclient/README.md
  - docs/sdks/items/README.md
  - docs/sdks/jobs/README.md
  - docs/sdks/project/README.md
  - docs/sdks/queues/README.md
  - docs/sdks/recorder/README.md
  - docs/sdks/repeatitems/README.md
  - docs/sdks/run/README.md
  - docs/sdks/runs/README.md
  - docs/sdks/update/README.md
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/filesExtractMarkdownResult.ts
  - src/funcs/filesExtractMarkdownStart.ts
  - src/funcs/filesExtractMarkdownSync.ts
  - src/funcs/filesExtractStructuredDataResult.ts
  - src/funcs/filesExtractStructuredDataStart.ts
  - src/funcs/filesExtractStructuredDataSync.ts
  - src/funcs/filesExtractTablesResult.ts
  - src/funcs/filesExtractTablesStart.ts
  - src/funcs/filesExtractTablesSync.ts
  - src/funcs/projectAuthSessionsAll.ts
  - src/funcs/projectAuthSessionsCreateResult.ts
  - src/funcs/projectAuthSessionsCreateResume.ts
  - src/funcs/projectAuthSessionsCreateStart.ts
  - src/funcs/projectAuthSessionsDelete.ts
  - src/funcs/projectAuthSessionsOne.ts
  - src/funcs/projectAuthSessionsRecorderStart.ts
  - src/funcs/projectAuthSessionsUpdateResult.ts
  - src/funcs/projectAuthSessionsUpdateResume.ts
  - src/funcs/projectAuthSessionsUpdateStart.ts
  - src/funcs/projectJobsAll.ts
  - src/funcs/projectJobsCreate.ts
  - src/funcs/projectJobsDelete.ts
  - src/funcs/projectJobsOne.ts
  - src/funcs/projectJobsPause.ts
  - src/funcs/projectJobsResume.ts
  - src/funcs/projectJobsRunsAll.ts
  - src/funcs/projectJobsRunsTerminate.ts
  - src/funcs/projectJobsTrigger.ts
  - src/funcs/projectQueuesAll.ts
  - src/funcs/projectQueuesCreate.ts
  - src/funcs/projectQueuesDelete.ts
  - src/funcs/projectQueuesItemsAppend.ts
  - src/funcs/projectQueuesItemsDelete.ts
  - src/funcs/projectQueuesItemsResult.ts
  - src/funcs/projectQueuesOne.ts
  - src/funcs/projectQueuesRepeatItemsAll.ts
  - src/funcs/projectQueuesRepeatItemsAppend.ts
  - src/funcs/projectQueuesRepeatItemsDelete.ts
  - src/funcs/projectQueuesRepeatItemsOne.ts
  - src/funcs/projectQueuesRepeatItemsUpdate.ts
  - src/funcs/projectRunResult.ts
  - src/funcs/projectRunStart.ts
  - src/funcs/projectRunSync.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/components/addqueueitem.ts
  - src/models/components/addqueuerepeatitem.ts
  - src/models/components/amazons3sink.ts
  - src/models/components/apiparameters.ts
  - src/models/components/asyncfilependingresponse.ts
  - src/models/components/asyncresultresponse.ts
  - src/models/components/asyncruncompletedresponse.ts
  - src/models/components/asyncrunfailedresponse.ts
  - src/models/components/asyncrunpendingresponse.ts
  - src/models/components/authsession.ts
  - src/models/components/authsessioncreatedoneresult.ts
  - src/models/components/authsessioncreatefailedresult.ts
  - src/models/components/authsessioncreatependingresult.ts
  - src/models/components/authsessioncreaterequestedmoreinforesult.ts
  - src/models/components/authsessioncreateresult.ts
  - src/models/components/authsessioncreateresume.ts
  - src/models/components/authsessioninfo.ts
  - src/models/components/completedqueueitemresult.ts
  - src/models/components/createauthsessionrequest.ts
  - src/models/components/createauthsessionresume.ts
  - src/models/components/createjob.ts
  - src/models/components/createorupdateauthsessionstart.ts
  - src/models/components/createqueue.ts
  - src/models/components/extractstructureddataimagestrategy.ts
  - src/models/components/extractstructureddatamarkdownstrategy.ts
  - src/models/components/extractstructureddatarequest.ts
  - src/models/components/extractstructureddatastrategy.ts
  - src/models/components/failedqueueitemresult.ts
  - src/models/components/file.ts
  - src/models/components/filebase64source.ts
  - src/models/components/filefailedresponse.ts
  - src/models/components/filesource.ts
  - src/models/components/fileurlsource.ts
  - src/models/components/generalextractrequest.ts
  - src/models/components/imageaiextractionmodel.ts
  - src/models/components/imagefile.ts
  - src/models/components/index.ts
  - src/models/components/job.ts
  - src/models/components/jobcalendarrange.ts
  - src/models/components/jobcalendarvalue.ts
  - src/models/components/jobconfiguration.ts
  - src/models/components/jobconfigurationresponse.ts
  - src/models/components/jobinput.ts
  - src/models/components/jobpayload.ts
  - src/models/components/jobretry.ts
  - src/models/components/jobretryresponse.ts
  - src/models/components/jobrun.ts
  - src/models/components/jobschedule.ts
  - src/models/components/jobsink.ts
  - src/models/components/jobsinkresultpayload.ts
  - src/models/components/markdownextractionasyncresponse.ts
  - src/models/components/markdownextractionsuccessfulresponse.ts
  - src/models/components/markdownextractionsyncresponse.ts
  - src/models/components/parameters.ts
  - src/models/components/pausejob.ts
  - src/models/components/pdffile.ts
  - src/models/components/pendingqueueitemresult.ts
  - src/models/components/queueconfiguration.ts
  - src/models/components/queuedqueueitemresult.ts
  - src/models/components/queueinput.ts
  - src/models/components/queueitem.ts
  - src/models/components/queueitemresult.ts
  - src/models/components/queuerepeatitem.ts
  - src/models/components/queuerepeatiteminput.ts
  - src/models/components/queuesinkresultpayload.ts
  - src/models/components/resumejob.ts
  - src/models/components/retry.ts
  - src/models/components/runprojectapirequest.ts
  - src/models/components/security.ts
  - src/models/components/sinkresult.ts
  - src/models/components/spreadsheetfile.ts
  - src/models/components/startauthsessionrecorder.ts
  - src/models/components/startauthsessionrecorderrequest.ts
  - src/models/components/structureddataextractionasyncresponse.ts
  - src/models/components/structureddataextractionfilesuccessfulresponse.ts
  - src/models/components/structureddataextractionsyncresponse.ts
  - src/models/components/syncresultresponse.ts
  - src/models/components/tableextractionasyncresponse.ts
  - src/models/components/tableextractionsuccessfulresponse.ts
  - src/models/components/tableextractionsyncresponse.ts
  - src/models/components/terminatejobrun.ts
  - src/models/components/textaiextractionmodel.ts
  - src/models/components/triggerjob.ts
  - src/models/components/updateauthsessionrequest.ts
  - src/models/components/updatequeuerepeatitem.ts
  - src/models/components/webhookapiinfo.ts
  - src/models/components/webhookapiinforesultcompleted.ts
  - src/models/components/webhookapiinforesultfailed.ts
  - src/models/components/webhooksink.ts
  - src/models/errors/apierrorinvalidinput.ts
  - src/models/errors/apierrorunauthorized.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/sdkerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/operations/appendqueueitem.ts
  - src/models/operations/appendrepeatitem.ts
  - src/models/operations/createauthsessionresult.ts
  - src/models/operations/createauthsessionresume.ts
  - src/models/operations/createjob.ts
  - src/models/operations/createorupdateauthsessionstart.ts
  - src/models/operations/createqueue.ts
  - src/models/operations/deleteauthsession.ts
  - src/models/operations/deletejob.ts
  - src/models/operations/deletequeue.ts
  - src/models/operations/deletequeueitem.ts
  - src/models/operations/deleterepeatqueueitem.ts
  - src/models/operations/fileextractmarkdownresult.ts
  - src/models/operations/fileextractmarkdownstart.ts
  - src/models/operations/fileextractmarkdownsync.ts
  - src/models/operations/fileextractstructureddataresult.ts
  - src/models/operations/fileextractstructureddatastart.ts
  - src/models/operations/fileextractstructureddatasync.ts
  - src/models/operations/fileextracttablesresult.ts
  - src/models/operations/fileextracttablesstart.ts
  - src/models/operations/fileextracttablessync.ts
  - src/models/operations/getauthsession.ts
  - src/models/operations/getauthsessions.ts
  - src/models/operations/getjob.ts
  - src/models/operations/getjobruns.ts
  - src/models/operations/getjobs.ts
  - src/models/operations/getqueue.ts
  - src/models/operations/getqueueitemresult.ts
  - src/models/operations/getqueues.ts
  - src/models/operations/getrepeatitems.ts
  - src/models/operations/getrepeatqueueitem.ts
  - src/models/operations/index.ts
  - src/models/operations/pausejob.ts
  - src/models/operations/resumejob.ts
  - src/models/operations/runapiresult.ts
  - src/models/operations/runapistart.ts
  - src/models/operations/runapisync.ts
  - src/models/operations/startauthsessionrecorder.ts
  - src/models/operations/terminatejobrun.ts
  - src/models/operations/triggerjob.ts
  - src/models/operations/updateauthsessionresult.ts
  - src/models/operations/updateauthsessionresume.ts
  - src/models/operations/updateauthsessionstart.ts
  - src/models/operations/updaterepeatqueueitem.ts
  - src/sdk/authsessions.ts
  - src/sdk/create.ts
  - src/sdk/extractmarkdown.ts
  - src/sdk/extractstructureddata.ts
  - src/sdk/extracttables.ts
  - src/sdk/files.ts
  - src/sdk/index.ts
  - src/sdk/items.ts
  - src/sdk/jobs.ts
  - src/sdk/project.ts
  - src/sdk/queues.ts
  - src/sdk/recorder.ts
  - src/sdk/repeatitems.ts
  - src/sdk/run.ts
  - src/sdk/runs.ts
  - src/sdk/sdk.ts
  - src/sdk/update.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  fileExtractStructuredDataSync:
    Extract data from PDF:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}, "dataSchema": {"type": "object", "description": "Employee Information", "properties": {"name": {"type": "string"}, "age": {"type": "number"}, "jobTitle": {"type": "string"}}}}
      responses:
        "200":
          application/json: {"operationId": "<value>", "status": "failed", "error": "<value>", "message": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}, "dataSchema": {"type": "object", "description": "Employee Information", "properties": {"name": {"type": "string"}, "age": {"type": "number"}, "jobTitle": {"type": "string"}}}, "strategy": {"type": "MARKDOWN", "model": "gpt4-turbo"}}
      responses:
        "200":
          application/json: {"result": "<value>", "operationId": "<value>", "status": "completed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    Extracted data:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}, "dataSchema": {"type": "object", "description": "Employee Information", "properties": {"name": {"type": "string"}, "age": {"type": "number"}, "jobTitle": {"type": "string"}}}, "strategy": {"type": "MARKDOWN", "model": "gpt4-turbo"}}
      responses:
        "200":
          application/json: {"result": {"firstName": "John", "lastName": "Doe", "jobTitle": "Manager"}, "operationId": "aaaabbbCCCCdddd", "status": "completed"}
    Failed:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}, "dataSchema": {"type": "object", "description": "Employee Information", "properties": {"name": {"type": "string"}, "age": {"type": "number"}, "jobTitle": {"type": "string"}}}, "strategy": {"type": "MARKDOWN", "model": "gpt4-turbo"}}
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "failed", "error": "DOWNLOAD_FILE_ERROR", "message": "Failed to download the file - 404 Not Found"}
  fileExtractStructuredDataStart:
    Extract data from PDF:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}, "dataSchema": {"type": "object", "description": "Employee Information", "properties": {"name": {"type": "string"}, "age": {"type": "number"}, "jobTitle": {"type": "string"}}}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}, "dataSchema": {"type": "object", "description": "Employee Information", "properties": {"name": {"type": "string"}, "age": {"type": "number"}, "jobTitle": {"type": "string"}}}, "strategy": {"type": "MARKDOWN", "model": "gpt4-turbo"}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Pending:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}, "dataSchema": {"type": "object", "description": "Employee Information", "properties": {"name": {"type": "string"}, "age": {"type": "number"}, "jobTitle": {"type": "string"}}}, "strategy": {"type": "MARKDOWN", "model": "gpt4-turbo"}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
  fileExtractStructuredDataResult:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Extracted data result:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"result": {"firstName": "John", "lastName": "Doe", "jobTitle": "Manager"}, "operationId": "aaaabbbCCCCdddd", "status": "completed"}
    Failed:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "failed", "error": "DOWNLOAD_FILE_ERROR", "message": "Failed to download the file - 404 Not Found"}
    Pending:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
  fileExtractMarkdownSync:
    Extract from PDF:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}}
      responses:
        "200":
          application/json: {"operationId": "<value>", "status": "failed", "error": "<value>", "message": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "http://unconscious-margin.name"}}}
      responses:
        "200":
          application/json: {"result": "<value>", "operationId": "<value>", "status": "completed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Extracted markdown:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "base64", "data": "<value>"}}}
      responses:
        "200":
          application/json: {"result": "# Title\\n\\n This is a paragraph", "operationId": "aaaabbbCCCCdddd", "status": "completed"}
    Failed:
      requestBody:
        application/json: {"file": {"type": "image", "source": {"type": "base64", "data": "<value>"}}}
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "failed", "error": "DOWNLOAD_FILE_ERROR", "message": "Failed to download the file - 404 Not Found"}
  fileExtractMarkdownStart:
    Extract from PDF:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        application/json: {"file": {"type": "image", "source": {"type": "base64", "data": "<value>"}}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    Pending:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://miserable-airfare.info"}}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
  fileExtractMarkdownResult:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Extracted markdown result:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"result": "# Title\\n\\n This is a paragraph", "operationId": "aaaabbbCCCCdddd", "status": "completed"}
    Failed:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "failed", "error": "DOWNLOAD_FILE_ERROR", "message": "Failed to download the file - 404 Not Found"}
    Pending:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
  fileExtractTablesSync:
    Extract from PDF:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}}
      responses:
        "200":
          application/json: {"operationId": "<value>", "status": "failed", "error": "<value>", "message": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "http://unconscious-margin.name"}}}
      responses:
        "200":
          application/json: {"result": [], "operationId": "<value>", "status": "completed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Extracted tables:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "base64", "data": "<value>"}}}
      responses:
        "200":
          application/json: {"result": [{"pageNumber": 1, "title": "Customers", "content": [["Number", "Name"], ["1", "John Doe"]]}], "operationId": "aaaabbbCCCCdddd", "status": "completed"}
    Failed:
      requestBody:
        application/json: {"file": {"type": "image", "source": {"type": "base64", "data": "<value>"}}}
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "failed", "error": "DOWNLOAD_FILE_ERROR", "message": "Failed to download the file - 404 Not Found"}
  fileExtractTablesStart:
    Extract from PDF:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://intuned.io/example.pdf"}}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
      requestBody:
        application/json: {"file": {"type": "image", "source": {"type": "base64", "data": "<value>"}}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    Pending:
      requestBody:
        application/json: {"file": {"type": "pdf", "source": {"type": "url", "data": "https://miserable-airfare.info"}}}
      responses:
        "201":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
  fileExtractTablesResult:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Extracted tables result:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"result": [{"pageNumber": 1, "title": "Customers", "content": [["Number", "Name"], ["1", "John Doe"]]}], "operationId": "aaaabbbCCCCdddd", "status": "completed"}
    Failed:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "failed", "error": "DOWNLOAD_FILE_ERROR", "message": "Failed to download the file - 404 Not Found"}
    Pending:
      parameters:
        path:
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"operationId": "aaaabbbCCCCdddd", "status": "pending"}
  getJobs:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      responses:
        "200":
          application/json: []
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    List of jobs:
      parameters:
        path:
          projectName: "my-project"
      responses:
        "200":
          application/json: [{"id": "my-sample-job", "sink": {"type": "webhook", "url": "http://second-forte.info"}, "payload": [{"apiName": "get-contracts", "parameters": {"key": "<value>", "key1": "<value>"}}, {"apiName": "get-contracts", "parameters": []}], "schedule": {"calendars": [{"second": "*", "minute": "*", "hour": [{"start": 1, "end": 30, "step": 1}], "dayOfMonth": {"start": 1, "end": 30, "step": 1}, "dayOfWeek": {"start": "MONDAY", "end": "FRIDAY", "step": 1}, "month": {"start": 1, "end": 30, "step": 1}, "year": "<value>", "comment": "Trigger every midnight hour on work days"}]}, "configuration": {"runMode": "Order-Irrelevant", "maxConcurrentRequests": 5}, "next_run_time": "2024-12-26T22:57:42.132Z", "last_run_time": "2022-09-20T02:31:45.776Z", "projectId": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"}]
  createJob:
    Sample Job:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"id": "my-sample-job", "sink": {"type": "webhook", "url": "http://popular-street.info"}, "payload": [{"apiName": "get-contracts", "parameters": {"key": "<value>"}}, {"apiName": "get-contracts", "parameters": []}], "schedule": {"calendars": [{"second": "*", "minute": "*", "hour": "<value>", "dayOfMonth": [{"start": 1, "end": 30, "step": 1}], "dayOfWeek": {"start": "MONDAY", "end": "FRIDAY", "step": 1}, "month": [{"start": 1, "end": 30, "step": 1}], "year": "<value>", "comment": "Trigger every midnight hour on work days"}]}, "configuration": {"runMode": "Order-Irrelevant", "maxConcurrentRequests": 5}}
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
        "201": {}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      requestBody:
        application/json: {"id": "<id>", "sink": {"type": "s3", "region": "us-west-2", "bucket": "<value>", "accessKeyId": "<value>", "secretAccessKey": "<value>"}, "payload": [], "schedule": {"calendars": [{"second": "*", "minute": "*", "hour": "<value>", "dayOfMonth": "3015.1", "dayOfWeek": {"start": "MONDAY", "end": "FRIDAY", "step": 1}, "month": "<value>", "year": {"start": 1, "end": 30, "step": 1}, "comment": "Trigger every midnight hour on work days"}]}, "configuration": {"runMode": "Order-Irrelevant"}}
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
        "201": {}
    Success:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"id": "<id>", "sink": {"type": "s3", "region": "us-west-2", "bucket": "<value>", "accessKeyId": "<value>", "secretAccessKey": "<value>"}, "payload": [], "schedule": {"calendars": [{"second": "*", "minute": "*", "hour": [{"start": 1, "end": 30, "step": 1}], "dayOfMonth": [{"start": 1, "end": 30, "step": 1}], "dayOfWeek": {"start": "MONDAY", "end": "FRIDAY", "step": 1}, "month": {"start": 1, "end": 30, "step": 1}, "year": {"start": 1, "end": 30, "step": 1}, "comment": "Trigger every midnight hour on work days"}]}, "configuration": {"runMode": "Order-Irrelevant"}}
      responses:
        "201":
          application/json: {"id": "my-sample-job", "message": "created"}
  getJob:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "200":
          application/json: {"id": "<id>", "sink": {"type": "s3", "region": "us-west-2", "bucket": "<value>", "accessKeyId": "<value>", "secretAccessKey": "<value>"}, "payload": [], "schedule": {"calendars": [{"second": "*", "minute": "*", "hour": [{"start": 1, "end": 30, "step": 1}], "dayOfMonth": {"start": 1, "end": 30, "step": 1}, "dayOfWeek": {"start": "MONDAY", "end": "FRIDAY", "step": 1}, "month": {"start": 1, "end": 30, "step": 1}, "year": "2323.13", "comment": "Trigger every midnight hour on work days"}]}, "configuration": {"runMode": "Order-Irrelevant"}, "next_run_time": "2023-05-17T15:33:20.902Z", "last_run_time": "2024-11-18T10:03:33.054Z", "projectId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Job:
      parameters:
        path:
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "200":
          application/json: {"id": "my-sample-job", "sink": {"type": "s3", "region": "us-west-2", "bucket": "<value>", "accessKeyId": "<value>", "secretAccessKey": "<value>"}, "payload": [{"apiName": "get-contracts", "parameters": []}, {"apiName": "get-contracts", "parameters": []}], "schedule": {"calendars": [{"second": "*", "minute": "*", "hour": "<value>", "dayOfMonth": "<value>", "dayOfWeek": {"start": "MONDAY", "end": "FRIDAY", "step": 1}, "month": "<value>", "year": "<value>", "comment": "Trigger every midnight hour on work days"}]}, "configuration": {"runMode": "Order-Irrelevant", "maxConcurrentRequests": 5}, "next_run_time": "2024-11-18T07:45:04.202Z", "last_run_time": "2024-08-25T13:55:03.018Z", "projectId": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"}
  deleteJob:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
  pauseJob:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "200":
          application/json: {"message": "Paused"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
  resumeJob:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "200":
          application/json: {"message": "Resumed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
  triggerJob:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "200":
          application/json: {"message": "Triggered"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
  getJobRuns:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "200":
          application/json: []
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    List of job runs:
      parameters:
        path:
          projectName: "my-project"
          jobId: "my-sample-job"
      responses:
        "200":
          application/json: [{"id": "260da8ff-f208-4b9c-ac28-a29b3ad0371a", "projectId": "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee", "jobId": "my-sample-job", "start_time": "2024-01-01T00:00:00Z", "status": "PENDING", "type": "MANUAL", "workspace_id": "3c648ac3-5959-4207-ad21-cea333ee5610"}]
  terminateJobRun:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          jobId: "my-sample-job"
          runId: "aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee"
      responses:
        "200":
          application/json: {"message": "Job run terminated"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
  getQueues:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      responses:
        "200":
          application/json: []
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Sample list of queues:
      parameters:
        path:
          projectName: "my-project"
      responses:
        "200":
          application/json: [{"id": "my-sample-queue", "name": "sample-queue", "configuration": {"runMode": "Default", "retry": {"maximumAttempts": 3}, "rateLimits": [{"limit": 3, "duration": "1s"}]}, "sink": {"type": "webhook", "url": "https://webhook.site/1b1b1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"}, "authSession": {"id": "1a1a1a1a-1a1a-1a1a-1a1a-1a1a1a1a1a1a"}, "metadata": {"meta1": "value1", "meta2": "value2"}}]
  createQueue:
    Sample Queue:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"id": "my-sample-queue", "name": "sample-queue", "configuration": {"runMode": "Default", "retry": {"maximumAttempts": 3}, "rateLimits": [{"limit": 3, "duration": "1s"}]}, "sink": {"type": "webhook", "url": "https://webhook.site/1b1b1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"}, "authSession": {"id": "1a1a1a1a-1a1a-1a1a-1a1a-1a1a1a1a1a1a"}, "metadata": {"meta1": "value1", "meta2": "value2"}}
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
        "201": {}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      requestBody:
        application/json: {"configuration": {"runMode": "Default"}}
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
        "201": {}
    Created:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"configuration": {"runMode": "Default"}}
      responses:
        "201":
          application/json: {"id": "my-sample-queue"}
  getQueue:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
      responses:
        "200":
          application/json: {"configuration": {"runMode": "Default"}}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Sample Queue:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
      responses:
        "200":
          application/json: {"id": "my-sample-queue", "name": "sample-queue", "configuration": {"runMode": "Default", "retry": {"maximumAttempts": 3}, "rateLimits": [{"limit": 3, "duration": "1s"}]}, "sink": {"type": "webhook", "url": "https://webhook.site/1b1b1b1b-1b1b-1b1b-1b1b-1b1b1b1b1b1b"}, "authSession": {"id": "1a1a1a1a-1a1a-1a1a-1a1a-1a1a1a1a1a1a"}, "metadata": {"meta1": "value1", "meta2": "value2"}}
  deleteQueue:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
      responses:
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
  appendQueueItem:
    Sample Queue Item:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
      requestBody:
        application/json: {"apiName": "get-contracts", "parameters": {}, "retry": {"maximumAttempts": 3}}
      responses:
        "201":
          application/json: {"runId": "<value>", "status": "queued"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
      requestBody:
        application/json: {"apiName": "<value>"}
      responses:
        "201":
          application/json: {"runId": "<value>", "status": "queued"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Queue item appended:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
      requestBody:
        application/json: {"apiName": "<value>"}
      responses:
        "201":
          application/json: {"runId": "11111111-1111-1111-1111-111111111111", "status": "queued"}
  getQueueItemResult:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemRunId: "11111111-1111-1111-1111-111111111111"
      responses:
        "200":
          application/json: {"runId": "<value>", "status": "failed", "error": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "statusCode": "9804.18"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Completed:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemRunId: "11111111-1111-1111-1111-111111111111"
      responses:
        "200":
          application/json: {"runId": "11111111-1111-1111-1111-111111111111", "status": "completed", "result": {"contracts": [{"contractId": 1, "status": "completed"}]}, "statusCode": 200}
    Queued:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemRunId: "11111111-1111-1111-1111-111111111111"
      responses:
        "200":
          application/json: {"runId": "11111111-1111-1111-1111-111111111111", "status": "queued"}
    Pending:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemRunId: "11111111-1111-1111-1111-111111111111"
      responses:
        "200":
          application/json: {"runId": "11111111-1111-1111-1111-111111111111", "status": "pending"}
    Failed:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemRunId: "11111111-1111-1111-1111-111111111111"
      responses:
        "200":
          application/json: {"runId": "<value>", "status": "failed", "error": {"key": "<value>", "key1": "<value>"}, "statusCode": "1011.68"}
  deleteQueueItem:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemRunId: "11111111-1111-1111-1111-111111111111"
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
  getRepeatItems:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
      responses:
        "200":
          application/json: []
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Sample list of queue repeatable items:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
      responses:
        "200":
          application/json: [{"apiName": "<value>", "repeat": "10m", "id": "22222222-2222-2222-2222-222222222222", "lastRunId": "11111111-1111-1111-1111-111111111111"}, {"apiName": "<value>", "repeat": "10m", "id": "33333333-3333-3333-3333-333333333333", "lastRunId": "22222222-2222-2222-2222-222222222222"}]
  appendRepeatItem:
    Sample Queue Repeat Item:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
      requestBody:
        application/json: {"apiName": "<value>", "repeat": "10m"}
      responses:
        "201":
          application/json: {"id": "<id>", "status": "repeatable item created"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
      requestBody:
        application/json: {"apiName": "<value>", "repeat": "<value>"}
      responses:
        "201":
          application/json: {"id": "<id>", "status": "repeatable item created"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Repeatable item created:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
      requestBody:
        application/json: {"apiName": "<value>", "repeat": "<value>"}
      responses:
        "201":
          application/json: {"id": "22222222-2222-2222-2222-222222222222", "status": "repeatable item created"}
  getRepeatQueueItem:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemId: "22222222-2222-2222-2222-222222222222"
      responses:
        "200":
          application/json: {"apiName": "<value>", "repeat": "<value>", "id": "<id>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Sample Queue Repeatable Item:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemId: "22222222-2222-2222-2222-222222222222"
      responses:
        "200":
          application/json: {"apiName": "<value>", "repeat": "10m", "id": "22222222-2222-2222-2222-222222222222", "lastRunId": "11111111-1111-1111-1111-111111111111"}
  updateRepeatQueueItem:
    Sample Queue Repeat Item:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemId: "22222222-2222-2222-2222-222222222222"
      requestBody:
        application/json: {"apiName": "<value>", "repeat": "10m"}
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
        "200": {}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemId: "22222222-2222-2222-2222-222222222222"
      requestBody:
        application/json: {"apiName": "<value>", "repeat": "<value>"}
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
        "200": {}
    Repeatable item updated:
      parameters:
        path:
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemId: "22222222-2222-2222-2222-222222222222"
      requestBody:
        application/json: {"apiName": "<value>", "repeat": "<value>"}
      responses:
        "200":
          application/json: {"message": "repeatable item updated"}
  deleteRepeatQueueItem:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          queueId: "my-sample-queue"
          itemId: "22222222-2222-2222-2222-222222222222"
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
  runApiSync:
    Run API request:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"api": "get-contracts", "parameters": [], "retry": {"maximumAttempts": 3}, "proxy": "http://username:password@domain:port"}
      responses:
        "200":
          application/json: {"status": "completed", "statusCode": "576.89", "runId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      requestBody:
        application/json: {"api": "<value>", "parameters": {}, "proxy": "http://username:password@domain:port"}
      responses:
        "200":
          application/json: {"error": "<value>", "message": "<value>", "status": "failed", "statusCode": "5419.66", "runId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    Successful result:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"api": "<value>", "parameters": {}, "proxy": "http://username:password@domain:port"}
      responses:
        "200":
          application/json: {"result": {"contracts": [{"id": "#1", "contractor": {"name": "John Doe", "phone": 1234567890}}, {"id": "#2", "contractor": {"name": "Jane Doe", "phone": 987654321}}]}, "status": "completed", "statusCode": 200, "runId": "aabbccddeeffggh"}
    Failed result:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"api": "<value>", "parameters": {}, "proxy": "http://username:password@domain:port"}
      responses:
        "200":
          application/json: {"error": "empty_page", "message": "empty page - no contracts found", "status": "failed", "statusCode": 400, "runId": "aabbccddeeffggh"}
  runApiStart:
    Run API request:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"api": "get-contracts", "parameters": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "retry": {"maximumAttempts": 3}, "proxy": "http://username:password@domain:port"}
      responses:
        "201":
          application/json: {"status": "pending", "runId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      requestBody:
        application/json: {"api": "<value>", "parameters": {}, "proxy": "http://username:password@domain:port"}
      responses:
        "201":
          application/json: {"status": "pending", "runId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Pending:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"api": "<value>", "parameters": [], "proxy": "http://username:password@domain:port"}
      responses:
        "201":
          application/json: {"status": "pending", "runId": "aabbccddeeffggh"}
  runApiResult:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          runId: "aabbccddeeffggh"
      responses:
        "200":
          application/json: {"error": "<value>", "message": "<value>", "status": "failed", "statusCode": "9748.27", "runId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Completed:
      parameters:
        path:
          projectName: "my-project"
          runId: "aabbccddeeffggh"
      responses:
        "200":
          application/json: {"result": {"contracts": [{"id": "#1", "contractor": {"name": "John Doe", "phone": 1234567890}}, {"id": "#2", "contractor": {"name": "Jane Doe", "phone": 987654321}}]}, "status": "completed", "statusCode": 200, "runId": "aabbccddeeffggh"}
    Pending:
      parameters:
        path:
          projectName: "my-project"
          runId: "aabbccddeeffggh"
      responses:
        "200":
          application/json: {"status": "pending", "runId": "aabbccddeeffggh"}
    Failed:
      parameters:
        path:
          projectName: "my-project"
          runId: "aabbccddeeffggh"
      responses:
        "200":
          application/json: {"error": "empty_page", "message": "empty page - no contracts found", "status": "failed", "statusCode": 400, "runId": "aabbccddeeffggh"}
  getAuthSessions:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      responses:
        "200":
          application/json: []
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    Auth Sessions:
      parameters:
        path:
          projectName: "my-project"
      responses:
        "200":
          application/json: [{"id": "00000000-1111-2222-3333-444444444444", "status": "EXPIRED"}, {"id": "11111111-2222-3333-4444-555555555555", "status": "EXPIRED"}]
  getAuthSession:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          authSessionId: "<value>"
      responses:
        "200":
          application/json: {"id": "<id>", "status": "READY"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    Auth Session:
      parameters:
        path:
          projectName: "my-project"
          authSessionId: "<value>"
      responses:
        "200":
          application/json: {"id": "00000000-1111-2222-3333-444444444444", "status": "READY"}
  deleteAuthSession:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          authSessionId: "<value>"
      responses:
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
  CreateOrUpdateAuthSessionStart:
    Create auth session:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"id": "my-auth-session", "parameters": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
      responses:
        "201":
          application/json: {"status": "started", "operationId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      responses:
        "201":
          application/json: {"status": "started", "operationId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Started:
      parameters:
        path:
          projectName: "my-project"
      responses:
        "201":
          application/json: {"status": "started", "operationId": "aabbccddeeffggh"}
  createAuthSessionResult:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "failed", "error": "<value>", "message": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Done:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "done", "authSessionId": "00000000-1111-2222-3333-444444444444"}
    Pending:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "pending"}
    Requested More Info (OTP):
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "requested_more_info", "id": "99999999-9999-9999-9999-999999999999", "details": {"requestType": "otp", "action": "request_more_info", "messageToUser": "Please enter the OTP sent to your email"}}
    Requested More Info (Multiple Choice):
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "requested_more_info", "id": "99999999-9999-9999-9999-999999999999", "details": {"choices": ["John Doe", "Jane Doe"], "requestType": "multiple_choice", "action": "request_more_info", "messageToUser": "Please select the account to use"}}
    Failed:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "failed", "error": "invalid_credentials", "message": "Invalid credentials"}
  createAuthSessionResume:
    Resume auth session - OTP:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      requestBody:
        application/json: {"input": "123456", "info_request_id": "99999999-9999-9999-9999-999999999999"}
      responses:
        "202":
          application/json: {"status": "resumed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
    Resume auth session - Multiple Choice:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      requestBody:
        application/json: {"input": "John Doe", "info_request_id": "99999999-9999-9999-9999-999999999999"}
      responses:
        "202":
          application/json: {"status": "resumed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      requestBody:
        application/json: {"input": "<value>", "info_request_id": "<value>"}
      responses:
        "202":
          application/json: {"status": "resumed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
  UpdateAuthSessionStart:
    Create auth session:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"id": "my-auth-session", "parameters": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}
      responses:
        "201":
          application/json: {"status": "started", "operationId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      requestBody:
        application/json: {"id": "<id>"}
      responses:
        "201":
          application/json: {"status": "started", "operationId": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    Started:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"id": "<id>"}
      responses:
        "201":
          application/json: {"status": "started", "operationId": "aabbccddeeffggh"}
  updateAuthSessionResult:
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "failed", "error": "<value>", "message": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
    Done:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "done", "authSessionId": "00000000-1111-2222-3333-444444444444"}
    Pending:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "pending"}
    Requested More Info (OTP):
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "requested_more_info", "id": "99999999-9999-9999-9999-999999999999", "details": {"requestType": "otp", "action": "request_more_info", "messageToUser": "Please enter the OTP sent to your email"}}
    Requested More Info (Multiple Choice):
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "requested_more_info", "id": "99999999-9999-9999-9999-999999999999", "details": {"choices": ["John Doe", "Jane Doe"], "requestType": "multiple_choice", "action": "request_more_info", "messageToUser": "Please select the account to use"}}
    Failed:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      responses:
        "200":
          application/json: {"status": "failed", "error": "invalid_credentials", "message": "Invalid credentials"}
  updateAuthSessionResume:
    Resume auth session - OTP:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      requestBody:
        application/json: {"input": "123456", "info_request_id": "99999999-9999-9999-9999-999999999999"}
      responses:
        "202":
          application/json: {"status": "resumed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
    Resume auth session - Multiple Choice:
      parameters:
        path:
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      requestBody:
        application/json: {"input": "John Doe", "info_request_id": "99999999-9999-9999-9999-999999999999"}
      responses:
        "202":
          application/json: {"status": "resumed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
          operationId: "aaaabbbCCCCdddd"
      requestBody:
        application/json: {"input": "<value>", "info_request_id": "<value>"}
      responses:
        "202":
          application/json: {"status": "resumed"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>"}
  startAuthSessionRecorder:
    Create auth session:
      parameters:
        path:
          projectName: "my-project"
      requestBody:
        application/json: {"authSessionId": "1a1a1a1a-1a1a-1a1a-1a1a-1a1a1a1a1a1a"}
      responses:
        "201":
          application/json: {"recorder_url": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized"}
    "":
      parameters:
        path:
          workspaceId: aaaaaaaa-bbbb-cccc-dddd-eeeeeeeeeeee
          projectName: "my-project"
      responses:
        "201":
          application/json: {"recorder_url": "<value>"}
        "400":
          application/json: {"message": "Invalid input"}
        "401":
          application/json: {"message": "Unauthorized", "key": "<value>", "key1": "<value>", "key2": "<value>"}
